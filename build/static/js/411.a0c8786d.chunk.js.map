{"version":3,"file":"static/js/411.a0c8786d.chunk.js","mappings":"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","sources":["components/inputs/InputTableTextControl.js","components/inputs/InputSelect.js","pages/insurance/Step1.js","components/inputs/InputTableSelectSearchControl.js","components/inputs/InputTableDateControl.js","components/inputs/InputTableSelectControl.js","components/inputs/InputCheckBox.js","pages/insurance/components/step2/forms/FormConverageDetails.js","pages/insurance/utils/convert_nric_to_dob.js","pages/insurance/components/step2/forms/FormPersonalInformation.js","pages/insurance/components/step2/yup/schema.js","pages/insurance/utils/enum.js","pages/insurance/utils/functions.js","pages/insurance/components/step2/forms/FormNominee.js","pages/insurance/components/step2/forms/FormInsured.js","pages/insurance/components/step2/forms/FormChild.js","pages/insurance/components/step2/buttons/ButtonNewInsured.js","pages/insurance/components/step2/buttons/ButtonNewChild.js","pages/insurance/Step2.js","pages/insurance/components/step3/cards/CardPersonalInformation.js","pages/insurance/components/step3/cards/CardCoverageDetails.js","pages/insurance/components/common/cards/CardInsuranceRateDetails.js","pages/insurance/components/common/tables/TableNominee.js","pages/insurance/components/step3/cards/CardInsuredDetails.js","pages/insurance/components/step3/cards/CardChildDetails.js","pages/insurance/Step3.js","pages/insurance/components/step4/sections/SectionPayment.js","pages/insurance/components/step4/cards/CardPaymentReturnStatus.js","pages/insurance/components/step4/cards/CardPersonalInformation.js","pages/insurance/components/step4/cards/CardCoverageDetails.js","pages/insurance/components/step4/tables/TableNominee.js","pages/insurance/components/step4/cards/CardInsuredsDetails.js","pages/insurance/components/step4/sections/SectionPaymentReturn.js","pages/insurance/Step4.js","pages/insurance/components/common/steppers/StepperHorizontal.js","pages/insurance/components/common/steppers/StepperVertical.js","pages/insurance/Insurance.js"],"sourcesContent":["import React from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport TextField from \"@mui/material/TextField\"\nimport { Controller } from \"react-hook-form\"\n\nimport { NumberFormatter, NumberFormatterLeadingZeros } from \"src/utils/functions\"\n\nconst InputTableTextControl = styled(\n    ({ control, name, label, defaultValue, number, onBlur, leadingZeros, ...props }) => (\n        <>\n            <Controller\n                control={control}\n                name={name}\n                defaultValue={defaultValue || \"\"}\n                render={({ field: { onChange, value }, fieldState: { invalid, error } }) => (\n                    <TextField\n                        required\n                        fullWidth\n                        label={label}\n                        size=\"small\"\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        value={value}\n                        error={invalid}\n                        helperText={error?.message || \" \"}\n                        InputLabelProps={{\n                            style: {\n                                color: \"#CCCCCC\",\n                            },\n                        }}\n                        InputProps={{\n                            inputComponent: number\n                                ? leadingZeros\n                                    ? NumberFormatterLeadingZeros\n                                    : NumberFormatter\n                                : null,\n                            // autoComplete: \"off\",\n                        }}\n                        FormHelperTextProps={{\n                            className: \"mt-0\",\n                        }}\n                        multiline\n                        {...props}\n                    />\n                )}\n            />\n        </>\n    ),\n)(({ theme }) => ({\n    \".MuiInputLabel-root.Mui-error\": {\n        color: \"rgb(239, 83, 80) !important\",\n    },\n    \".MuiInputLabel-shrink.Mui-focused.Mui-error\": {\n        color: \"rgb(239, 83, 80) !important\",\n    },\n    \".MuiInputLabel-shrink.Mui-focused\": {\n        color: \"#009C99 !important\",\n    },\n    \".MuiOutlinedInput-notchedOutline\": {\n        transition: \"0.3s\",\n        legend: {\n            float: \"unset\",\n            overflow: \"hidden\",\n            display: \"block\",\n            width: \"auto\",\n            padding: 0,\n            height: \"11px\",\n            fontSize: \"0.75em\",\n            visibility: \"hidden\",\n            transition: \"max-width 100ms cubic-bezier(0.0, 0, 0.2, 1) 50ms\",\n            whiteSpace: \"nowrap\",\n        },\n    },\n}))\n\nexport default InputTableTextControl\n","import React, { useState } from \"react\"\nimport { styled } from \"@mui/material/styles\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport FormControl from \"@mui/material/FormControl\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Select from \"@mui/material/Select\"\nimport Checkbox from \"@mui/material/Checkbox\"\nimport InputBase from \"@mui/material/InputBase\"\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        },\n    },\n}\n\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\n    \"label + &\": {\n        marginTop: theme.spacing(3),\n    },\n    \"& .MuiInputBase-input\": {\n        borderRadius: 4,\n        position: \"relative\",\n        backgroundColor: theme.palette.background.paper,\n        border: \"1.5px solid #ced4da\",\n        fontSize: 14,\n        padding: \"8px 15px 8px 10px\",\n        transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n        \"&:focus\": {\n            borderRadius: 4,\n            borderColor: \"#009c99\",\n            boxShadow: \"0 0 0 0.07rem rgba(0, 156, 153, 1)\",\n        },\n    },\n}))\n\nexport default function InputSelect({ label, options, handleChange }) {\n    const [selectedOptions, setSelectedOptions] = useState([])\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event\n        setSelectedOptions(typeof value === \"string\" ? value.split(\",\") : value)\n        handleChange(value)\n    }\n\n    return (\n        <div className=\"my-auto\">\n            <FormControl sx={{ m: 1, width: 240 }} size=\"small\">\n                <Select\n                    multiple\n                    displayEmpty\n                    value={selectedOptions}\n                    onChange={onChange}\n                    input={<BootstrapInput />}\n                    renderValue={(selected) => {\n                        if (selected.length === 0) {\n                            return label\n                        }\n\n                        return options\n                            ?.filter((i) => selected?.includes(i.value))\n                            .map((m) => m.label)\n                            .join(\", \")\n                    }}\n                    MenuProps={MenuProps}\n                >\n                    {options?.map((option, index) => (\n                        <MenuItem key={index} value={option.value}>\n                            <Checkbox\n                                checked={selectedOptions.indexOf(option.value) > -1}\n                                size=\"small\"\n                            />\n                            <ListItemText\n                                primaryTypographyProps={{ fontSize: 14, color: \"primary.main\" }}\n                                primary={option.label}\n                            />\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { CCard, CCardBody } from \"@coreui/react\"\nimport { Link } from \"react-router-dom\"\nimport Card from \"@mui/material/Card\"\nimport CardActions from \"@mui/material/CardActions\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Button from \"@mui/material/Button\"\nimport Typography from \"@mui/material/Typography\"\nimport Grid from \"@mui/material/Grid\"\nimport Divider from \"@mui/material/Divider\"\nimport HTMLEllipsis from \"react-lines-ellipsis/lib/html\"\nimport produce from \"immer\"\nimport Box from \"@mui/material/Box\"\nimport Alert from \"@mui/material/Alert\"\n\nimport { setSelectedInsurance, setInsuranceDetails } from \"src/action/ui_actions\"\nimport logoAIG from \"src/assets/logoAIG.png\"\nimport logoAllianz from \"src/assets/logoAllianz.png\"\nimport logoCHUBB from \"src/assets/logoCHUBB.png\"\nimport logoRHB from \"src/assets/logoRHB.png\"\nimport logoTune from \"src/assets/logoTune.png\"\nimport logoAXA from \"src/assets/logoAXA.png\"\nimport InputSelect from \"src/components/inputs/InputSelect\"\nimport { INSURANCE } from \"src/utils/enum\"\n\nexport const Step1 = ({\n    setSelectedInsurance,\n    setInsuranceDetails,\n    next,\n    insurances,\n    sales,\n    meta,\n    insuranceDetailsForm,\n    selectedInsurance,\n    loggedInUser,\n}) => {\n    const [insuranceInsurance, setInsuranceInsurance] = useState(null)\n    const [insurance, setInsurance] = useState(null)\n    const [filterByInsurance, setFilterByInsurance] = useState(null)\n    const [filterByRegion, setFilterByRegion] = useState(null)\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    useEffect(() => {\n        setInsuranceInsurance()\n        if (insurances && insurances?.length > 0) {\n            setInsuranceInsurance(prepareInsurance())\n        } else {\n            setInsuranceInsurance(null)\n        }\n    }, [insurances])\n\n    useEffect(() => {\n        if (meta?.insurer_list) {\n            setInsurance(\n                meta?.insurer_list?.map((i) => {\n                    return { label: i.insurer_name, value: i.id }\n                }),\n            )\n        }\n    }, [meta])\n\n    useEffect(() => {\n        let tempInsurance = prepareInsurance()\n\n        if (filterByInsurance?.length > 0) {\n            tempInsurance = tempInsurance?.filter((i) => filterByInsurance?.includes(i.insurer_id))\n        }\n\n        if (filterByRegion?.length > 0) {\n            const domestic = filterByRegion.includes(\"domestic\")\n            const oversea = filterByRegion.includes(\"oversea\")\n\n            if (domestic && !oversea) {\n                tempInsurance = tempInsurance?.filter((i) => i.start_from_price_domestic !== null)\n            }\n\n            if (oversea && !domestic) {\n                tempInsurance = tempInsurance?.filter((i) => i.start_from_price_oversea !== null)\n            }\n        }\n\n        setInsuranceInsurance(tempInsurance)\n    }, [filterByInsurance, filterByRegion])\n\n    const prepareInsurance = () => {\n        let tempInsurances = []\n        for (let i = 0; i < insurances?.length; i++) {\n            let insuranceLogo = null\n            let insuranceTitleColor = null\n\n            let tempInsurance = produce(insurances[i], (draftState) => {\n                return draftState\n            })\n\n            if (tempInsurance?.package_name?.toLowerCase().includes(\"aig\")) {\n                insuranceLogo = logoAIG\n                insuranceTitleColor = \"#081c74\"\n            }\n\n            if (tempInsurance?.package_name?.toLowerCase().includes(\"allianz\")) {\n                insuranceLogo = logoAllianz\n                insuranceTitleColor = \"#003781\"\n            }\n\n            if (tempInsurance?.package_name?.toLowerCase().includes(\"chubb\")) {\n                insuranceLogo = logoCHUBB\n                insuranceTitleColor = \"#080404\"\n            }\n\n            if (tempInsurance?.package_name?.toLowerCase().includes(\"rhb\")) {\n                insuranceLogo = logoRHB\n                insuranceTitleColor = \"#0067b1\"\n            }\n\n            if (tempInsurance?.package_name?.toLowerCase().includes(\"tune\")) {\n                insuranceLogo = logoTune\n                insuranceTitleColor = \"#e91c24\"\n            }\n\n            if (tempInsurance?.package_name?.toLowerCase().includes(\"axa\")) {\n                insuranceLogo = logoAXA\n                insuranceTitleColor = \"#01028e\"\n            }\n\n            tempInsurance = produce(tempInsurance, (draftState) => {\n                draftState.insuranceLogo = insuranceLogo\n                draftState.insuranceTitleColor = insuranceTitleColor\n                draftState.backgroundStyle = {\n                    backgroundImage: `url(${insuranceLogo})`,\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundPosition: \"center\",\n                    backgroundSize: \"55%\",\n                    backgroundColor: \"rgba(255,255,255,0.9)\",\n                    backgroundBlendMode: \"overlay\",\n                }\n            })\n            tempInsurances.push(tempInsurance)\n        }\n        return tempInsurances\n    }\n\n    const filterInsurance = (insurance) => {\n        setFilterByInsurance(insurance)\n    }\n\n    const filterRegion = (region) => {\n        setFilterByRegion(region)\n    }\n\n    const selectButton = (item) => {\n        if (insuranceDetailsForm || insuranceDetailsForm?.insureds.length > 0) {\n            if (insuranceDetailsForm?.insurerCode !== item?.insurer_code) {\n                //1. set coverage type to individual\n                //2. remove all insured\n                //3. add main insured\n                //4. remove all child\n                //5. set isSpouse to false\n                const coverageTypeDefault = \"individual\"\n                const isSpouseDefault = false\n                let destination = insuranceDetailsForm?.destination\n                let isWithinMalaysia = insuranceDetailsForm?.isWithinMalaysia\n\n                // Reset destination for aig\n                if (item?.insurer_code === INSURANCE.AIG) {\n                    if (item?.package_name.includes(\"Domestic\")) {\n                        destination = [{ label: \"Malaysia\", code: 136 }]\n                    } else {\n                        destination = []\n                    }\n\n                    isWithinMalaysia = false\n                }\n\n                setInsuranceDetails({\n                    insurerCode: selectedInsurance?.insurer_code,\n                    fullName: insuranceDetailsForm?.fullName,\n                    travelDocument: insuranceDetailsForm?.travelDocument,\n                    travelDocumentValue: insuranceDetailsForm?.travelDocumentValue,\n                    dob: insuranceDetailsForm?.dob,\n                    address: insuranceDetailsForm?.address,\n                    occupation: insuranceDetailsForm?.occupation,\n                    email: insuranceDetailsForm?.email,\n                    countryCode: insuranceDetailsForm?.countryCode,\n                    mobileNo: insuranceDetailsForm?.mobileNo,\n                    coverageType: coverageTypeDefault,\n                    departureDate: insuranceDetailsForm?.departureDate,\n                    returnDate: insuranceDetailsForm?.returnDate,\n                    travelDelayUpgrade: insuranceDetailsForm?.travelDelayUpgrade,\n                    destination: destination,\n                    isWithinMalaysia: isWithinMalaysia,\n                    isSpouse: isSpouseDefault,\n                    tripType: insuranceDetailsForm?.tripType,\n                    insureds: [],\n                    child: [],\n                    token: insuranceDetailsForm?.token,\n                    referralId: sales?.id,\n                })\n            }\n        }\n    }\n\n    return (\n        <div id=\"insurance-step-1-wrapper\" className=\"d-flex justify-content-center\">\n            <CCard>\n                <CCardBody className=\"text-center\">\n                    {!loggedInUser && (\n                        <Alert severity=\"info\" className=\"mb-5\">\n                            <Box className=\"d-flex flex-column\" sx={{ textAlign: \"initial\" }}>\n                                <Typography variant=\"caption\">\n                                    <b>\n                                        <Link\n                                            to=\"/login\"\n                                            className=\"text-decoration-underline\"\n                                            style={{ color: \"#014361\" }}\n                                        >\n                                            Login Now\n                                        </Link>{\" \"}\n                                        or{\" \"}\n                                        <Link\n                                            to=\"/sign-up\"\n                                            className=\"text-decoration-underline\"\n                                            style={{ color: \"#014361\" }}\n                                        >\n                                            Sign Up\n                                        </Link>{\" \"}\n                                        for a free account.\n                                    </b>\n                                </Typography>\n\n                                <Typography variant=\"caption\">\n                                    An Untung1 Account provides you with the following advantages:\n                                </Typography>\n\n                                <Typography variant=\"caption\">\n                                    <ul className=\"mb-0\">\n                                        <li>View Purchase History</li>\n                                        <li>Download Insurance Quotation</li>\n                                        <li>Download Insurance Policy</li>\n                                    </ul>\n                                </Typography>\n                            </Box>\n                        </Alert>\n                    )}\n\n                    {sales?.name && (\n                        <div id=\"insurance-step-1-sale\">\n                            <div id=\"insurance-step-1-sale-content\" className=\"mb-2\">\n                                Sales : {sales?.name}\n                            </div>\n                        </div>\n                    )}\n\n                    <div id=\"insurance-step-1-title\">Choose the right plan for you</div>\n\n                    <Grid\n                        container\n                        spacing={{ xs: 2, md: 3 }}\n                        columns={{ xs: 1, sm: 1, md: 12 }}\n                        className=\"m-auto mb-3 justify-content-end\"\n                    >\n                        <Grid item xs={3} className=\"p-0\">\n                            <InputSelect\n                                label=\"Filter Insurance...\"\n                                options={insurance}\n                                handleChange={(insurance) => filterInsurance(insurance)}\n                            />\n                        </Grid>\n\n                        <Grid item xs={3} className=\"p-0\">\n                            <InputSelect\n                                label=\"Filter Region...\"\n                                options={[\n                                    { label: \"Domestic\", value: \"domestic\" },\n                                    { label: \"Oversea\", value: \"oversea\" },\n                                ]}\n                                handleChange={(region) => filterRegion(region)}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid\n                        container\n                        spacing={{ xs: 2, md: 3 }}\n                        columns={{ xs: 1, sm: 1, md: 8, lg: 12 }}\n                        className=\"pb-3\"\n                        style={{\n                            margin: \"auto 0\",\n                            background: \"rgb(237, 247, 237)\",\n                            borderRadius: \"4px\",\n                        }}\n                    >\n                        {insuranceInsurance?.length === 0 && (\n                            <div className=\"m-3\">No package to display</div>\n                        )}\n                        {insuranceInsurance?.map((item, index) => (\n                            <Grid item key={index} xs={1} sm={1} md={4} lg={4} className=\"p-3\">\n                                <Card\n                                    className=\"w-100 p-2 position-relative\"\n                                    sx={{\n                                        border: sales?.insurer_id?.find(\n                                            (i) => i === item?.insurer_id,\n                                        )\n                                            ? `2px solid ${item.insuranceTitleColor}`\n                                            : \"none\",\n                                    }}\n                                >\n                                    <CardContent style={{ minHeight: \"335px\" }}>\n                                        <div\n                                            className={`d-flex ${\n                                                item?.insurer_code === INSURANCE.TUNE ||\n                                                item?.insurer_code === INSURANCE.AIG ||\n                                                item?.insurer_code === INSURANCE.AXA\n                                                    ? \"mb-3\"\n                                                    : \"\"\n                                            }`}\n                                            style={{ minHeight: \"66px\" }}\n                                        >\n                                            <div className=\"m-auto\">\n                                                <img\n                                                    src={item.insuranceLogo}\n                                                    style={{\n                                                        width:\n                                                            item?.insurer_code === INSURANCE.TUNE ||\n                                                            item?.insurer_code === INSURANCE.AXA\n                                                                ? \"25%\"\n                                                                : \"40%\",\n                                                    }}\n                                                    alt=\"logo\"\n                                                />\n                                            </div>\n                                        </div>\n                                        <Typography\n                                            gutterBottom\n                                            variant=\"h5\"\n                                            component=\"div\"\n                                            style={{\n                                                fontSize: \"18px\",\n                                                marginBottom: \"1rem\",\n                                                color: item.insuranceTitleColor,\n                                                fontWeight: \"700\",\n                                                textAlign: \"center\",\n                                            }}\n                                        >\n                                            {item?.package_name}\n                                        </Typography>\n\n                                        <Typography\n                                            variant=\"body2\"\n                                            component=\"div\"\n                                            color=\"text.secondary\"\n                                            style={{\n                                                fontSize: \"0.8rem\",\n                                                marginBottom: \"1rem\",\n                                                minHeight: \"100px\",\n                                                textAlign: \"initial\",\n                                            }}\n                                        >\n                                            <HTMLEllipsis\n                                                unsafeHTML={item?.package_description}\n                                                maxLine=\"5\"\n                                                ellipsis=\"...\"\n                                                basedOn=\"letters\"\n                                            />\n                                        </Typography>\n\n                                        <Typography\n                                            variant=\"body2\"\n                                            color=\"text.secondary\"\n                                            component=\"div\"\n                                            style={{\n                                                fontSize: \"0.7rem\",\n                                                padding: \"0.5rem\",\n                                                fontWeight: \"700\",\n                                                textAlign: \"left\",\n                                                minHeight: \"100px\",\n                                            }}\n                                        >\n                                            <div className=\"d-flex\">\n                                                <div className=\"mt-1\">\n                                                    <span style={{ paddingRight: \"0.5rem\" }}>\n                                                        From\n                                                    </span>\n                                                </div>\n                                                <div>\n                                                    <div>\n                                                        {item?.start_from_price_domestic && (\n                                                            <div>\n                                                                <span\n                                                                    style={{\n                                                                        fontSize: \"20px\",\n                                                                        fontWeight: \"700\",\n                                                                        color: \"black\",\n                                                                    }}\n                                                                >\n                                                                    RM{\" \"}\n                                                                    {\n                                                                        item?.start_from_price_domestic\n                                                                    }\n                                                                </span>{\" \"}\n                                                                <span>(Domestic)</span>\n                                                            </div>\n                                                        )}\n                                                    </div>\n\n                                                    <div>\n                                                        {item?.start_from_price_oversea && (\n                                                            <div>\n                                                                <span\n                                                                    style={{\n                                                                        fontSize: \"20px\",\n                                                                        fontWeight: \"700\",\n                                                                        color: \"black\",\n                                                                    }}\n                                                                >\n                                                                    RM{\" \"}\n                                                                    {item?.start_from_price_oversea}\n                                                                </span>{\" \"}\n                                                                <span>(Oversea)</span>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Typography>\n                                    </CardContent>\n\n                                    <CardActions className=\"d-flex justify-content-center flex-column\">\n                                        <Button\n                                            disableElevation\n                                            size=\"small\"\n                                            variant=\"contained\"\n                                            className=\"w-75\"\n                                            style={{ padding: \"5px\" }}\n                                            onClick={() => {\n                                                setSelectedInsurance(item)\n                                                selectButton(item)\n                                                next()\n                                            }}\n                                        >\n                                            Select\n                                        </Button>\n\n                                        {sales?.insurer_id?.find((i) => i === item?.insurer_id) ? (\n                                            <Typography\n                                                component=\"div\"\n                                                variant=\"caption\"\n                                                color=\"error\"\n                                            >\n                                                <b>Recommended!</b>\n                                            </Typography>\n                                        ) : (\n                                            <Box sx={{ height: \"22px\" }}> </Box>\n                                        )}\n                                    </CardActions>\n\n                                    <Divider className=\"mt-3 mb-2\"></Divider>\n\n                                    <div className=\"d-flex justify-content-center\">\n                                        <Button\n                                            disableElevation\n                                            size=\"small\"\n                                            onClick={() => {\n                                                if (\n                                                    item?.attachment_url !== null &&\n                                                    item?.attachment_url !== \"\"\n                                                ) {\n                                                    window.location.href = item?.attachment_url\n                                                }\n                                            }}\n                                        >\n                                            See more plan details\n                                        </Button>\n                                    </div>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </CCardBody>\n            </CCard>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    insurances: state.insurance.insurances,\n    sales: state.insurance.sales,\n    meta: state.core.meta,\n    insuranceDetailsForm: state.insurance.insuranceDetailsForm,\n    selectedInsurance: state.insurance.selectedInsurance,\n    loggedInUser: state.core.loggedInUser,\n})\n\nconst mapDispatchToProps = { setSelectedInsurance, setInsuranceDetails }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Step1)\n","import * as React from \"react\"\nimport TextField from \"@mui/material/TextField\"\nimport Autocomplete from \"@mui/material/Autocomplete\"\nimport FormControl from \"@mui/material/FormControl\"\nimport FormHelperText from \"@mui/material/FormHelperText\"\nimport { Controller } from \"react-hook-form\"\n\nconst InputTableSelectSearchControl = ({\n    control,\n    name,\n    label,\n    multiple,\n    options,\n    disabled,\n    ...props\n}) => {\n    return (\n        <Controller\n            control={control}\n            name={name}\n            defaultValue={multiple ? [] : \"\"}\n            render={({ field: { onChange, value }, fieldState: { invalid, error } }) => (\n                <FormControl fullWidth error={invalid}>\n                    <Autocomplete\n                        disablePortal\n                        disabled={disabled}\n                        size=\"small\"\n                        multiple={multiple}\n                        value={value}\n                        onChange={(e, data) => onChange(data)}\n                        options={options || []}\n                        isOptionEqualToValue={(option, value) => option.code === value.code}\n                        sx={{\n                            \".MuiOutlinedInput-notchedOutline\": {\n                                transition: \"0.3s\",\n                                top: 0,\n                            },\n                            \".MuiInputLabel-root\": {\n                                backgroundColor: \"#ffffff\",\n                                paddingLeft: \"2px\",\n                                paddingRight: \"2px\",\n                            },\n                        }}\n                        renderInput={(params) => (\n                            <TextField\n                                {...params}\n                                {...props}\n                                label={label}\n                                error={invalid}\n                                required\n                            />\n                        )}\n                    />\n                    <FormHelperText>{error?.message || \" \"}</FormHelperText>\n                </FormControl>\n            )}\n        />\n    )\n}\n\nexport default InputTableSelectSearchControl\n","import React from \"react\"\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\"\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\"\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\"\nimport { Controller } from \"react-hook-form\"\nimport TextField from \"@mui/material/TextField\"\nimport { styled } from \"@mui/material/styles\"\nimport FormHelperText from \"@mui/material/FormHelperText\"\nimport FormControl from \"@mui/material/FormControl\"\n\nconst TextFieldStyle = styled(TextField)(({ theme }) => ({\n    \".MuiOutlinedInput-notchedOutline\": {\n        transition: \"0.3s\",\n        legend: {\n            float: \"unset\",\n            overflow: \"hidden\",\n            display: \"block\",\n            width: \"auto\",\n            padding: 0,\n            height: \"11px\",\n            fontSize: \"0.75em\",\n            visibility: \"hidden\",\n            transition: \"max-width 100ms cubic-bezier(0.0, 0, 0.2, 1) 50ms\",\n            whiteSpace: \"nowrap\",\n        },\n    },\n}))\n\nconst InputDateControl = ({ control, name, label, ...props }) => {\n    return (\n        <>\n            <Controller\n                control={control}\n                name={name}\n                defaultValue={null}\n                render={({\n                    field: { onChange, onBlur, value },\n                    fieldState: { invalid, error },\n                }) => (\n                    <FormControl fullWidth error={invalid}>\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <MobileDatePicker\n                                disableCloseOnSelect={false}\n                                inputFormat=\"d MMM yyyy\"\n                                label={label}\n                                value={value}\n                                onChange={onChange}\n                                renderInput={(params) => {\n                                    params.error = invalid\n                                    params.required = true\n                                    return <TextFieldStyle size=\"small\" {...params} />\n                                }}\n                                {...props}\n                            />\n\n                            <FormHelperText>{error?.message || \" \"}</FormHelperText>\n                        </LocalizationProvider>\n                    </FormControl>\n                )}\n            />\n        </>\n    )\n}\n\nexport default InputDateControl\n","import * as React from \"react\"\nimport InputLabel from \"@mui/material/InputLabel\"\nimport MenuItem from \"@mui/material/MenuItem\"\nimport FormControl from \"@mui/material/FormControl\"\nimport Select from \"@mui/material/Select\"\nimport FormHelperText from \"@mui/material/FormHelperText\"\nimport { Controller } from \"react-hook-form\"\n\nconst InputTableSelectControl = ({ control, name, label, options, defaultValue, ...props }) => {\n    return (\n        <>\n            <Controller\n                control={control}\n                name={name}\n                defaultValue={defaultValue}\n                render={({ field: { onChange, value }, fieldState: { invalid, error } }) => (\n                    <FormControl fullWidth error={invalid}>\n                        <InputLabel className=\"input-label\">{label} *</InputLabel>\n                        <Select\n                            required\n                            className=\"input-select\"\n                            size=\"small\"\n                            label={label}\n                            value={value}\n                            onChange={onChange}\n                            sx={{\n                                \".MuiOutlinedInput-notchedOutline\": {\n                                    transition: \"0.3s\",\n                                    legend: {\n                                        float: \"unset\",\n                                    },\n                                },\n                            }}\n                        >\n                            {options &&\n                                options?.map((item, index) => (\n                                    <MenuItem key={index} value={item.value}>\n                                        {item.label}\n                                    </MenuItem>\n                                ))}\n                        </Select>\n                        <FormHelperText>{error?.message || \" \"}</FormHelperText>\n                    </FormControl>\n                )}\n            />\n        </>\n    )\n}\nexport default InputTableSelectControl\n","import * as React from \"react\"\nimport FormControl from \"@mui/material/FormControl\"\nimport Checkbox from \"@mui/material/Checkbox\"\nimport FormHelperText from \"@mui/material/FormHelperText\"\nimport Typography from \"@mui/material/Typography\"\nimport { Controller } from \"react-hook-form\"\n\nconst InputCheckBox = ({ control, name, label, ...props }) => {\n    return (\n        <>\n            <Controller\n                control={control}\n                name={name}\n                defaultValue={false}\n                render={({ field: { onChange, value }, fieldState: { invalid, error } }) => (\n                    <FormControl fullWidth error={invalid} >\n                        <div className=\"d-flex\">\n                            <Checkbox\n                                size=\"small\"\n                                onChange={onChange}\n                                checked={value}\n                            />\n                            <div className=\"align-self-center\">\n                                <Typography variant=\"body1\" component=\"div\">\n                                    {label}\n                                </Typography>\n                            </div>\n                        </div>\n                        <FormHelperText>{error?.message || \" \"}</FormHelperText>\n                    </FormControl>\n                )}\n            />\n        </>\n    )\n}\nexport default InputCheckBox\n","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport { add, sub } from \"date-fns\"\n\nimport InputTableSelectSearchControl from \"src/components/inputs/InputTableSelectSearchControl\"\nimport InputTableDateControl from \"src/components/inputs/InputTableDateControl\"\nimport InputTableSelectControl from \"src/components/inputs/InputTableSelectControl\"\nimport InputCheckBox from \"src/components/inputs/InputCheckBox\"\nimport { TRIP_TYPE, INSURANCE, COVERAGE_TYPE } from \"src/utils/enum\"\nimport { setWatchInsuranceCoverage, setIsSpouse } from \"src/action/ui_actions\"\nimport { FormHelperText } from \"@mui/material\"\n\nfunction ConverageDetailsForm({\n    setWatchInsuranceCoverage,\n    setIsSpouse,\n    setValue,\n    resetField,\n    control,\n    meta,\n    selectedInsurance,\n    watchTripType,\n    watchCoverageType,\n    watchDepartureDate,\n    watchIsWithinMalaysia,\n    watchIsSpouse,\n    watchDestination,\n}) {\n    const [departureDate, setDepartureDate] = useState(null)\n    const [optionsCountries, setOptionsCountries] = useState(null)\n    const [optionsTripTypes, setOptionsTripType] = useState(null)\n    const [disabledDestination, setDisabledDestination] = useState(false)\n    const [hideReturnDate, setHideReturnDate] = useState(false)\n    let optionsCoverageType = [\n        { label: \"Individual\", value: \"individual\" },\n        { label: \"Family\", value: \"family\" },\n    ]\n\n    if (selectedInsurance?.insurer_code === INSURANCE.RHB) {\n        optionsCoverageType.push({ label: \"Insured & Spouse\", value: \"insured & spouse\" })\n    }\n\n    let optionsTravelDelayUpgrade = []\n    if (selectedInsurance?.insurer_code === INSURANCE.AIG) {\n        if (\n            !selectedInsurance?.package_name.includes(\"Domestic\") &&\n            !selectedInsurance?.package_name.includes(\"Primary\")\n        ) {\n            optionsTravelDelayUpgrade.push({ label: \"No\", value: 0 })\n            optionsTravelDelayUpgrade.push({ label: \"Yes\", value: 1 })\n        }\n    }\n\n    const [isShowChubbMessage, setIsShowChubbMessage] = useState(false)\n\n    useEffect(() => {\n        setHideReturnDate(false)\n\n        if (watchTripType === TRIP_TYPE.ANNUAL.id) {\n            setHideReturnDate(true)\n\n            if (watchDepartureDate) {\n                let returnDate = add(new Date(watchDepartureDate), { years: 1 })\n                returnDate = sub(returnDate, { days: 1 })\n\n                setValue(\"returnDate\", returnDate)\n            }\n            setDepartureDate(new Date(watchDepartureDate))\n        }\n\n        // For tune insurance\n        if (selectedInsurance?.insurer_code === INSURANCE.TUNE) {\n            if (watchTripType === TRIP_TYPE.SINGLE.id) {\n                setHideReturnDate(true)\n                setValue(\"returnDate\", watchDepartureDate)\n            }\n        }\n    }, [watchTripType])\n\n    useEffect(() => {\n        if (watchDepartureDate) {\n            if (watchTripType === TRIP_TYPE.ANNUAL.id) {\n                let returnDate = add(new Date(watchDepartureDate), { years: 1 })\n                returnDate = sub(returnDate, { days: 1 })\n\n                setValue(\"returnDate\", returnDate)\n                setDepartureDate(new Date(watchDepartureDate))\n            } else {\n                resetField(\"returnDate\")\n                setDepartureDate(new Date(watchDepartureDate))\n            }\n\n            // For tune insurance\n            if (selectedInsurance?.insurer_code === INSURANCE.TUNE) {\n                if (watchTripType === TRIP_TYPE.SINGLE.id) {\n                    setValue(\"returnDate\", watchDepartureDate)\n                }\n            }\n        }\n    }, [watchDepartureDate])\n\n    useEffect(() => {\n        setWatchInsuranceCoverage(watchCoverageType)\n    }, [watchCoverageType])\n\n    useEffect(() => {\n        setWatchInsuranceCoverage(watchCoverageType)\n    }, [watchCoverageType])\n\n    useEffect(() => {\n        if (meta?.destination_list) {\n            setOptionsCountries(\n                meta?.destination_list.map((i) => {\n                    return { label: i.country_name, code: i.id }\n                }),\n            )\n\n            if (selectedInsurance?.package_name.includes(\"AIG\")) {\n                if (selectedInsurance?.package_name.includes(\"Domestic\")) {\n                    setOptionsCountries(\n                        meta?.destination_list\n                            .filter((item) => item.is_domestic === 1)\n                            .map((i) => {\n                                return { label: i.country_name, code: i.id }\n                            }),\n                    )\n                } else {\n                    setOptionsCountries(\n                        meta?.destination_list\n                            .filter((item) => item.is_domestic === 0)\n                            .map((i) => {\n                                return { label: i.country_name, code: i.id }\n                            }),\n                    )\n                }\n            }\n            if (selectedInsurance?.package_name.includes(\"Tune\")) {\n                setOptionsCountries(\n                    meta?.destination_list\n                        .filter((item) => item.is_domestic === 0)\n                        .map((i) => {\n                            return { label: i.country_name, code: i.id }\n                        }),\n                )\n            }\n        }\n\n        if (meta?.trip_type_list) {\n            if (\n                selectedInsurance?.package_name?.toLowerCase().indexOf(\"aig primary\") > -1 ||\n                selectedInsurance?.package_name?.toLowerCase().indexOf(\"rhb\") > -1 ||\n                selectedInsurance?.package_name?.toLowerCase().indexOf(\"tune\") > -1\n            ) {\n                setOptionsTripType(\n                    meta?.trip_type_list\n                        .filter((i) => i?.trip_type_code?.toLowerCase() !== TRIP_TYPE.ANNUAL.code)\n                        .map((item) => {\n                            return { label: item.trip_type_name, value: item.id }\n                        }),\n                )\n            } else {\n                setOptionsTripType(\n                    meta?.trip_type_list.map((item) => {\n                        return { label: item.trip_type_name, value: item.id }\n                    }),\n                )\n            }\n        }\n    }, [meta])\n\n    useEffect(() => {\n        if (optionsCountries) {\n            // Default to Malaysia for AIG Domestic\n            if (selectedInsurance?.package_name.includes(\"AIG\")) {\n                if (selectedInsurance?.package_name.includes(\"Domestic\")) {\n                    setValue(\"destination\", [{ label: \"Malaysia\", code: 136 }])\n                }\n            }\n        } \n    }, [optionsCountries])\n\n    useEffect(() => {\n        if (watchIsWithinMalaysia) {\n            if (selectedInsurance?.insurer_code === INSURANCE.AIG) {\n                setDisabledDestination(false)\n\n                if (!selectedInsurance?.package_name.includes(\"Domestic\")) {\n                    resetField(\"destination\")\n                }\n            } else {\n                setValue(\"destination\", [{ label: \"Malaysia\", code: 136 }])\n                setDisabledDestination(true)\n            }\n        } else {\n            resetField(\"destination\")\n            setDisabledDestination(false)\n        }\n    }, [watchIsWithinMalaysia])\n\n    useEffect(() => {\n        if (watchIsSpouse) {\n            setIsSpouse(true)\n        } else {\n            setIsSpouse(false)\n        }\n    }, [watchIsSpouse])\n\n    useEffect(() => {\n        if (selectedInsurance?.insurer_code === INSURANCE.CHUBB) {\n            let existDomestic = false;\n            let existOversea = false;\n\n            if(watchDestination.filter((item) => item.code === 136).length === 1) {\n                existDomestic = true;\n            }\n            \n            if(watchDestination.filter((item) => item.code !== 136).length >= 1) {\n                existOversea = true;\n            }\n\n            if(existDomestic === true && existOversea === true) {\n                setIsShowChubbMessage(true)\n            } else {\n                setIsShowChubbMessage(false)\n            }  \n        }\n    }, [watchDestination])\n\n    return (\n        <>\n            <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 1, sm: 1, md: 12 }}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\" color=\"primary\">\n                        Travel Details\n                    </Typography>\n                </Grid>\n                \n                <Grid item xs={selectedInsurance?.insurer_code !== INSURANCE.AIG && selectedInsurance?.insurer_code !== INSURANCE.TUNE && selectedInsurance?.insurer_code !== INSURANCE.AXA ? 8 : 12}>\n                    <InputTableSelectSearchControl\n                        disabled={disabledDestination}\n                        control={control}\n                        multiple={true}\n                        name=\"destination\"\n                        label=\"Destination\"\n                        options={optionsCountries}\n                    />\n                    {isShowChubbMessage === true && (\n                        <FormHelperText style={{color : \"red\"}}>*For CHUBB package, domestic cannot buy together with oversea trip.</FormHelperText>\n                    )}\n                </Grid>\n\n                {selectedInsurance?.insurer_code !== INSURANCE.AIG && selectedInsurance?.insurer_code !== INSURANCE.TUNE\n                && selectedInsurance?.insurer_code !== INSURANCE.AXA && (\n                    <Grid item xs={4}>\n                        <InputCheckBox\n                            control={control}\n                            name=\"isWithinMalaysia\"\n                            label=\"Within Malaysia?\"\n                        />\n                    </Grid>\n                )}\n\n                <Grid item xs={6}>\n                    <InputTableSelectControl\n                        defaultValue={TRIP_TYPE.SINGLE.id}\n                        control={control}\n                        name=\"tripType\"\n                        label=\"Trip Type\"\n                        options={optionsTripTypes}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <InputTableSelectControl\n                        defaultValue=\"individual\"\n                        control={control}\n                        name=\"coverageType\"\n                        label=\"Coverage\"\n                        options={optionsCoverageType}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <InputTableDateControl\n                        disablePast\n                        control={control}\n                        name=\"departureDate\"\n                        label=\"Departure Date\"\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    {/* {(watchTripType !== TRIP_TYPE.ANNUAL.id ||\n                        (selectedInsurance?.insurer_code === INSURANCE.TUNE && watchTripType === TRIP_TYPE.ROUND.id))  */}\n                    {!hideReturnDate\n                        && (\n                            <InputTableDateControl\n                                control={control}\n                                name=\"returnDate\"\n                                label=\"Return Date\"\n                                defaultCalendarMonth={departureDate}\n                                minDate={departureDate}\n                                disabled={!departureDate}\n                            />\n                    )}\n                </Grid>\n\n                {optionsTravelDelayUpgrade.length > 0 && (\n                    <Grid item xs={6}>\n                        <InputTableSelectControl\n                            defaultValue=\"0\"\n                            control={control}\n                            name=\"travelDelayUpgrade\"\n                            label=\"Travel Delay Upgrade\"\n                            options={optionsTravelDelayUpgrade}\n                        />\n                    </Grid>\n                )}\n\n                {watchCoverageType === COVERAGE_TYPE.FAMILY && (\n                    <Grid item xs={6}>\n                        <InputCheckBox\n                            control={control}\n                            name=\"isSpouse\"\n                            label=\"Is your spouse travel with you?\"\n                        />\n                    </Grid>\n                )}\n                \n            </Grid>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    meta: state.core.meta,\n    selectedInsurance: state.insurance.selectedInsurance,\n    isSpouse: state.insurance.isSpouse,\n})\n\nconst mapDispatchToProps = { setWatchInsuranceCoverage, setIsSpouse }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConverageDetailsForm)\n","export const convertNricToDob = (nric) => {\n    const checkValidNricRegex = /^(\\d{2})(\\d{2})(\\d{2})-?\\d{2}-?\\d{4}$/;\n    \n    if (nric.match(checkValidNricRegex)) {\n        let year = ( checkValidNricRegex.exec(nric) || [] )[1] || \"\";\n        let month = ( checkValidNricRegex.exec(nric) || [] )[2] || \"\";\n        let day = ( checkValidNricRegex.exec(nric) || [] )[3] || \"\";\n\n        const now = new Date().getFullYear().toString();\n\n        const decade = now.substring(0, 2);\n        if (now.substring(2,4) >= year) {\n            year = parseInt(decade.concat(year.toString()), 10);\n        }\n\n        const date = new Date(year, (month - 1), day, 0, 0, 0, 0);\n        return date;\n    }\n}\n","import React, { useEffect, useState } from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\n\nimport InputTableTextControl from \"src/components/inputs/InputTableTextControl\"\nimport InputTableSelectControl from \"src/components/inputs/InputTableSelectControl\"\nimport InputTableDateControl from \"src/components/inputs/InputTableDateControl\"\nimport { COUNTRY_CODE, TRAVEL_DOCUMENT_TYPE } from \"src/utils/enum\"\nimport { convertNricToDob } from \"src/pages/insurance/utils/convert_nric_to_dob\"\n\nfunction PersonalInformationForm({\n    control,\n    getValues,\n    setValue,\n    watchTravelDocument,\n    watchTravelDocumentValue,\n}) {\n    const [travelDocumentLabel, setTravelDocumentLabel] = useState(\"NRIC\")\n    const [isNumber, setIsNumber] = useState(true)\n\n    useEffect(() => {\n        if (watchTravelDocument) {\n            TRAVEL_DOCUMENT_TYPE?.map((item) => {\n                if (watchTravelDocument === item.value) {\n                    setTravelDocumentLabel(item.label)\n\n                    setIsNumber(false)\n                    if (watchTravelDocument === \"nric\") {\n                        setIsNumber(true)\n                    }\n                }\n                return true\n            })\n        }\n    }, [watchTravelDocument])\n\n    // Auto fill dob when user fill up nric\n    useEffect(() => {\n        if (watchTravelDocumentValue) {\n            if (watchTravelDocument === \"nric\") {\n                const nric = getValues(\"travelDocumentValue\")\n                const returnDOB = convertNricToDob(nric)\n                setValue(\"dob\", returnDOB)\n            }\n        }\n    }, [watchTravelDocumentValue])\n\n    return (\n        <>\n            <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 1, sm: 1, md: 12 }}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h6\" color=\"primary\">\n                        Personal Information\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <InputTableTextControl\n                        defaultValue=\"\"\n                        control={control}\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <InputTableTextControl\n                        defaultValue=\"\"\n                        control={control}\n                        name=\"email\"\n                        label=\"Email\"\n                    />\n                </Grid>\n\n                <Grid item xs={3.5}>\n                    <InputTableSelectControl\n                        defaultValue=\"nric\"\n                        control={control}\n                        name=\"travelDocument\"\n                        label=\"Travel Document\"\n                        options={TRAVEL_DOCUMENT_TYPE}\n                    />\n                </Grid>\n\n                <Grid item xs={4.5}>\n                    <InputTableTextControl\n                        defaultValue=\"\"\n                        leadingZeros\n                        number={isNumber}\n                        control={control}\n                        name=\"travelDocumentValue\"\n                        label={travelDocumentLabel}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <InputTableDateControl control={control} name=\"dob\" label=\"DOB\" />\n                </Grid>\n\n                <Grid item xs={3.5}>\n                    <InputTableSelectControl\n                        defaultValue=\"+60\"\n                        control={control}\n                        name=\"countryCode\"\n                        label=\"Country Code\"\n                        options={COUNTRY_CODE}\n                    />\n                </Grid>\n\n                <Grid item xs={4}>\n                    <InputTableTextControl\n                        defaultValue=\"\"\n                        control={control}\n                        name=\"mobileNo\"\n                        label=\"Mobile No\"\n                        leadingZeros\n                        number={isNumber}\n                    />\n                </Grid>\n\n                <Grid item xs={4.5}>\n                    <InputTableTextControl\n                        defaultValue=\"\"\n                        control={control}\n                        name=\"occupation\"\n                        label=\"Occupation\"\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <InputTableTextControl\n                        defaultValue=\"\"\n                        control={control}\n                        name=\"address\"\n                        label=\"Address\"\n                    />\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default PersonalInformationForm\n","import * as yup from \"yup\"\nimport moment from \"moment\"\n\nconst FormSchema = yup\n    .object()\n    .shape({\n        fullName: yup\n            .string()\n            .nullable()\n            .required(\"Required field\")\n            .max(255, \"The maximum length is 255 characters\"),\n        travelDocument: yup.string().required(\"Required field\"),\n        travelDocumentValue: yup\n            .string()\n            .required(\"Required field\")\n            .when(\"travelDocument\", {\n                is: (travelDocument) => travelDocument === \"nric\",\n                then: yup\n                    .string()\n                    .test(\"travelDocumentValue\", \"NRIC must be exactly 12 digits\", (value) => {\n                        return value.length === 12\n                    }),\n            })\n            .when(\"nomineeTravelDocument\", {\n                is: (nomineeTravelDocument) => nomineeTravelDocument !== \"nric\",\n                then: yup\n                    .string()\n                    .test(\n                        \"nomineeTravelDocumentValue\",\n                        \"The maximum length is 100 characters\",\n                        (value) => {\n                            return value.length <= 100\n                        },\n                    ),\n            }),\n        // .when(\"travelDocument\", {\n        //     is: (travelDocument) => travelDocument === \"passport\",\n        //     then: yup\n        //         .string()\n        //         .test(\"nric\", \"Nric must be exactly 20 digit\", (value) => {\n        //             return value.length === 20\n        //         }),\n        // }),\n        dob: yup\n            .date()\n            .typeError(\"Required field\")\n            .test(\"dob\", \"Invalid DOB\", (value) => {\n                return moment().diff(moment(value), \"days\") >= 1\n            }),\n        mobileNo: yup\n            .string()\n            .nullable()\n            .required(\"Required field\")\n            .max(20, \"The maximum length is 20 digits\"),\n        address: yup\n            .string()\n            .nullable()\n            .required(\"Required field\")\n            .max(255, \"The maximum length is 255 characters\"),\n        occupation: yup\n            .string()\n            .nullable()\n            .required(\"Required field\")\n            .max(255, \"The maximum length is 255 characters\"),\n        email: yup\n            .string()\n            .nullable()\n            .required(\"Required field\")\n            .email(\"Must be a valid email\")\n            .max(255, \"The maximum length is 255 characters\"),\n        coverageType: yup.string().required(\"Required field\"),\n        tripType: yup.string().required(\"Required field\"),\n        departureDate: yup\n            .date()\n            .typeError(\"Required field\")\n            .test(\"departureDate\", \"Please choose a valid departure date\", (value) => {\n                return moment().diff(moment(value), \"days\") <= 0\n            }),\n        returnDate: yup\n            .date()\n            .typeError(\"Required field\")\n            .min(yup.ref(\"departureDate\"), \"Return date can't be before departure date\")\n            .when(\"departureDate\", {\n                is: (departureDate) => departureDate.length > 0,\n                then: yup\n                    .date()\n                    .typeError(\"Required field\")\n                    .min(yup.ref(\"departureDate\"), \"Return date can't be before departure date\"),\n            }),\n        destination: yup\n            .array(\n                yup.object().shape({\n                    label: yup.string().required(),\n                    code: yup.string().required(),\n                }),\n            )\n            .typeError(\"Required field\")\n            .min(1, \"Destination field must have at least 1 items\"),\n\n        insureds: yup.array().of(\n            yup.object().shape({\n                insuredFullName: yup\n                    .string()\n                    .required(\"Required field\")\n                    .max(255, \"The maximum length is 255 characters\"),\n                insuredTravelDocument: yup.string().required(\"Required field\"),\n                insuredTravelDocumentValue: yup\n                    .string()\n                    .required(\"Required field\")\n                    .when(\"insuredTravelDocument\", {\n                        is: (insuredTravelDocument) => insuredTravelDocument === \"nric\",\n                        then: yup\n                            .string()\n                            .test(\n                                \"insuredTravelDocumentValue\",\n                                \"NRIC must be exactly 12 digits\",\n                                (value) => {\n                                    return value.length === 12\n                                },\n                            ),\n                    })\n                    .when(\"insuredTravelDocument\", {\n                        is: (insuredTravelDocument) => insuredTravelDocument !== \"nric\",\n                        then: yup\n                            .string()\n                            .test(\n                                \"insuredTravelDocumentValue\",\n                                \"The maximum length is 100 characters\",\n                                (value) => {\n                                    return value.length <= 100\n                                },\n                            ),\n                    }),\n                insuredDOB: yup\n                    .date()\n                    .typeError(\"Required field\")\n                    .test(\"insuredDOB\", \"Invalid DOB\", (value) => {\n                        return moment().diff(moment(value), \"days\") >= 1\n                    }),\n                insuredAddress: yup\n                    .string()\n                    .required(\"Required field\")\n                    .max(255, \"The maximum length is 255 characters\"),\n                insuredOccupation: yup\n                    .string()\n                    .required(\"Required field\")\n                    .max(255, \"The maximum length is 255 characters\"),\n                insuredMobileNo: yup\n                    .string()\n                    .nullable()\n                    .required(\"Required field\")\n                    .max(20, \"The maximum length is 20 digits\"),\n                nomineesTotalShare: yup.string(),\n                nominees: yup.array().of(\n                    yup.object().shape({\n                        nomineeName: yup\n                            .string()\n                            .required(\"Required field\")\n                            .max(255, \"The maximum length is 255 characters\"),\n                        nomineeDOB: yup\n                            .date()\n                            .typeError(\"Required field\")\n                            .test(\"nomineeDOB\", \"Invalid DOB\", (value) => {\n                                return moment().diff(moment(value), \"days\") >= 1\n                            }),\n                        nomineeTravelDocument: yup.string().required(\"Required field\"),\n                        nomineeTravelDocumentValue: yup\n                            .string()\n                            .required(\"Required field\")\n                            .when(\"nomineeTravelDocument\", {\n                                is: (nomineeTravelDocument) => nomineeTravelDocument === \"nric\",\n                                then: yup\n                                    .string()\n                                    .test(\n                                        \"nomineeTravelDocumentValue\",\n                                        \"NRIC must be exactly 12 digit\",\n                                        (value) => {\n                                            return value.length === 12\n                                        },\n                                    ),\n                            })\n                            .when(\"nomineeTravelDocument\", {\n                                is: (nomineeTravelDocument) => nomineeTravelDocument !== \"nric\",\n                                then: yup\n                                    .string()\n                                    .test(\n                                        \"nomineeTravelDocumentValue\",\n                                        \"The maximum length is 100 digits\",\n                                        (value) => {\n                                            return value.length <= 100\n                                        },\n                                    ),\n                            }),\n                        nomineeRelationship: yup\n                            .string()\n                            .required(\"Required field\")\n                            .max(255, \"The maximum length is 255 characters\"),\n                        nomineeMobileNo: yup\n                            .string()\n                            .nullable()\n                            .required(\"Required field\")\n                            .max(20, \"The maximum length is 20 digits\"),\n                        nomineeShare: yup\n                            .number()\n                            .typeError(\"1 to 100 only\")\n                            .required(\"Required field\")\n                            .min(1, \"1 to 100 only\")\n                            .max(100, \"1 to 100 only\"),\n                    }),\n                ),\n            }),\n        ),\n        child: yup.array().of(\n            yup.object().shape({\n                insuredFullName: yup\n                    .string()\n                    .required(\"Required field\")\n                    .max(255, \"The maximum length is 255 characters\"),\n                insuredTravelDocument: yup.string().required(\"Required field\"),\n                insuredTravelDocumentValue: yup\n                    .string()\n                    .required(\"Required field\")\n                    .when(\"insuredTravelDocument\", {\n                        is: (insuredTravelDocument) => insuredTravelDocument === \"nric\",\n                        then: yup\n                            .string()\n                            .test(\n                                \"insuredTravelDocumentValue\",\n                                \"NRIC must be exactly 12 digits\",\n                                (value) => {\n                                    return value.length === 12\n                                },\n                            ),\n                    })\n                    .when(\"nomineeTravelDocument\", {\n                        is: (nomineeTravelDocument) => nomineeTravelDocument !== \"nric\",\n                        then: yup\n                            .string()\n                            .test(\n                                \"nomineeTravelDocumentValue\",\n                                \"The maximum length is 100 characters\",\n                                (value) => {\n                                    return value.length <= 100\n                                },\n                            ),\n                    }),\n                insuredDOB: yup\n                    .date()\n                    .typeError(\"Required field\")\n                    .test(\"insuredDOB\", \"Invalid DOB\", (value) => {\n                        return moment().diff(moment(value), \"days\") >= 1\n                    }),\n                insuredAddress: yup\n                    .string()\n                    .required(\"Required field\")\n                    .max(255, \"The maximum length is 255 characters\"),\n                insuredOccupation: yup\n                    .string()\n                    .required(\"Required field\")\n                    .max(255, \"The maximum length is 255 characters\"),\n                insuredMobileNo: yup\n                    .string()\n                    .nullable()\n                    .required(\"Required field\")\n                    .max(20, \"The maximum length is 20 digits\"),\n                nomineesTotalShare: yup.string(),\n                nominees: yup.array().of(\n                    yup.object().shape({\n                        nomineeName: yup\n                            .string()\n                            .required(\"Required field\")\n                            .max(255, \"The maximum length is 255 characters\"),\n                        nomineeDOB: yup\n                            .date()\n                            .typeError(\"Required field\")\n                            .test(\"nomineeDOB\", \"Invalid DOB\", (value) => {\n                                return moment().diff(moment(value), \"days\") >= 1\n                            }),\n                        nomineeTravelDocument: yup.string().required(\"Required field\"),\n                        nomineeTravelDocumentValue: yup\n                            .string()\n                            .required(\"Required field\")\n                            .when(\"nomineeTravelDocument\", {\n                                is: (nomineeTravelDocument) => nomineeTravelDocument === \"nric\",\n                                then: yup\n                                    .string()\n                                    .test(\n                                        \"nomineeTravelDocumentValue\",\n                                        \"NRIC must be exactly 12 digit\",\n                                        (value) => {\n                                            return value.length === 12\n                                        },\n                                    ),\n                            })\n                            .when(\"nomineeTravelDocument\", {\n                                is: (nomineeTravelDocument) => nomineeTravelDocument !== \"nric\",\n                                then: yup\n                                    .string()\n                                    .test(\n                                        \"nomineeTravelDocumentValue\",\n                                        \"The maximum length is 100 digits\",\n                                        (value) => {\n                                            return value.length <= 100\n                                        },\n                                    ),\n                            }),\n                        nomineeRelationship: yup\n                            .string()\n                            .required(\"Required field\")\n                            .max(255, \"The maximum length is 255 characters\"),\n                        nomineeMobileNo: yup\n                            .string()\n                            .nullable()\n                            .required(\"Required field\")\n                            .max(20, \"The maximum length is 20 digits\"),\n                        nomineeShare: yup\n                            .number()\n                            .typeError(\"1 to 100 only\")\n                            .required(\"Required field\")\n                            .min(1, \"1 to 100 only\")\n                            .max(100, \"1 to 100 only\"),\n                    }),\n                ),\n            }),\n        ),\n    })\n    .required()\n\nexport default FormSchema\n","export const EnumInsured = {\n    NRIC: 1,\n    FULLNAME: 2,\n    EMAIL: 3,\n}\n\nexport const EnumNominee = {\n    NRIC: 1,\n    FULLNAME: 2,\n    EMAIL: 3,\n    SHARE: 4,\n}\n","import moment from \"moment\"\nimport { TRIP_TYPE } from \"src/utils/enum\";\nimport InsuranceRules from \"src/pages/insurance/components/step2/rules/rules.json\"\n\nexport const validateDuplicateNRIC = ({ list, name, value, excludeIndex }) => {\n    return list.findIndex(\n        (item, index) => index !== excludeIndex && item[name].toString() === value.toString(),\n    )\n}\n\nexport const validateAge = ({ nric, insurerCode, packageName, coverageType, tripTypeId, type }) => {\n    \n    let selectedPackageName = null\n    if (InsuranceRules[insurerCode][packageName]) {\n        selectedPackageName = packageName\n    } else {\n        selectedPackageName = \"other\"\n    }\n\n    let tripTypeName = null;\n    if (tripTypeId === TRIP_TYPE.SINGLE.id || tripTypeId === TRIP_TYPE.ROUND.id) {\n        tripTypeName = \"single&round\"\n    } else if(tripTypeId === TRIP_TYPE.ANNUAL.id) {\n        tripTypeName = \"annual\"\n    }\n\n    const rule = InsuranceRules[insurerCode][selectedPackageName][tripTypeName][coverageType][\"age\"][type];\n    const insuredDOB = nricToDOB(nric)\n    const { age, diffDays } = dobToAge(insuredDOB)\n\n    let isValidAge = true\n    let errorMessage = null\n \n    if (rule[\"minDay\"] !== null) {\n        if (diffDays < rule[\"minDay\"]) {\n            isValidAge = false\n            errorMessage = validateAgeErrorMessage(type, rule)\n            return { isValidAge, errorMessage }\n        }\n    }\n\n    if (rule[\"minDay\"] === null) {\n        if (rule[\"minYear\"] !== null) {\n            if (age < rule[\"minYear\"]) {\n                isValidAge = false\n                errorMessage = validateAgeErrorMessage(type, rule)\n                return { isValidAge, errorMessage }\n            }\n        }\n    }\n\n    if (rule[\"maxYear\"] !== null) {\n        if (age > rule[\"maxYear\"]) {\n            isValidAge = false\n            errorMessage = validateAgeErrorMessage(type, rule)\n            return { isValidAge, errorMessage }\n        }\n    }\n\n    return { isValidAge, errorMessage }\n}\n\nexport const validateAgeErrorMessage = (type, rule) => {\n    let errorMessage = \"\"\n    if(type === \"child\") {\n        errorMessage += \"Child insured age should between \"\n    } else {\n        errorMessage += \"Insured age should between \"\n    }\n    let fromErrorMessage = \"\"\n    if (rule[\"minDay\"] !== null) {\n        fromErrorMessage = rule[\"minDay\"] + \" days old\"\n    }\n    if (rule[\"minDay\"] === null) {\n        fromErrorMessage = rule[\"minYear\"] + \" years old\"\n    }\n    if(rule[\"maxYear\"] !== null) {\n        errorMessage = errorMessage + fromErrorMessage + \" to \" + rule[\"maxYear\"] + \" years old only.\"\n    } else {\n        errorMessage = errorMessage + \"not less than \" + fromErrorMessage + '.'\n    }\n    return errorMessage\n}\n\nexport const nricToDOB = (nric) => {\n    const checkValidNricRegex = /^(\\d{2})(\\d{2})(\\d{2})-?\\d{2}-?\\d{4}$/\n\n    if (nric.match(checkValidNricRegex)) {\n        let year = (checkValidNricRegex.exec(nric) || [])[1] || \"\"\n        let month = (checkValidNricRegex.exec(nric) || [])[2] || \"\"\n        let day = (checkValidNricRegex.exec(nric) || [])[3] || \"\"\n\n        const now = new Date().getFullYear().toString()\n\n        const decade = now.substring(0, 2)\n        if (now.substring(2, 4) >= year) {\n            year = parseInt(decade.concat(year.toString()), 10)\n        }\n\n        const date = new Date(year, month - 1, day, 0, 0, 0, 0)\n        return date\n    }\n}\n\nexport const dobToAge = (dob) => {\n    const todaysDate = moment(dob);\n    const age = moment().diff(todaysDate, 'years');\n    const diffDays = moment().diff(todaysDate, 'days');\n\n    return { age, diffDays }\n}\n","import React, { useState, useEffect } from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Divider from \"@mui/material/Divider\"\n\nimport InputTableTextControl from \"src/components/inputs/InputTableTextControl\"\nimport InputTableDateControl from \"src/components/inputs/InputTableDateControl\"\nimport InputTableSelectControl from \"src/components/inputs/InputTableSelectControl\"\nimport { validateDuplicateNRIC } from \"src/pages/insurance/utils/functions\"\nimport { COUNTRY_CODE, TRAVEL_DOCUMENT_TYPE } from \"src/utils/enum\"\nimport { convertNricToDob } from \"src/pages/insurance/utils/convert_nric_to_dob\"\n\nfunction NomineeForm({\n    name,\n    indexInsured,\n    indexNominee,\n    control,\n    getValues,\n    setError,\n    setValue,\n    watch,\n}) {\n    const nominees = getValues(`${name}.${indexInsured}.nominees`)\n    const watchNomineeTravelDocument = watch(\n        `${name}.${indexInsured}.nominees[${indexNominee}].nomineeTravelDocument`,\n    )\n    const watchNomineeTravelDocumentValue = watch(\n        `${name}.${indexInsured}.nominees[${indexNominee}].nomineeTravelDocumentValue`,\n    )\n    const [nomineeTravelDocumentLabel, setNomineeTravelDocumentLabel] = useState(\"NRIC\")\n    const [isNumber, setIsNumber] = useState(true)\n\n    useEffect(() => {\n        if (watchNomineeTravelDocument) {\n            TRAVEL_DOCUMENT_TYPE?.map((item) => {\n                if (watchNomineeTravelDocument === item.value) {\n                    setNomineeTravelDocumentLabel(item.label)\n\n                    setIsNumber(false)\n                    if (watchNomineeTravelDocument === \"nric\") {\n                        setIsNumber(true)\n                    }\n                }\n                return true\n            })\n        }\n    }, [watchNomineeTravelDocument])\n\n    // Auto fill insured dob when user fill up nric\n    useEffect(() => {\n        if (watchNomineeTravelDocumentValue) {\n            if (watchNomineeTravelDocument === \"nric\") {\n                const nric = getValues(\n                    `${name}.${indexInsured}.nominees[${indexNominee}].nomineeTravelDocumentValue`,\n                )\n                const returnDOB = convertNricToDob(nric)\n                setValue(`${name}.${indexInsured}.nominees[${indexNominee}].nomineeDOB`, returnDOB)\n            }\n        }\n    }, [watchNomineeTravelDocumentValue])\n\n    return (\n        <Grid\n            container\n            spacing={{ xs: 2, md: 3 }}\n            columns={{ xs: 12, sm: 12, md: 12 }}\n            direction=\"row\"\n            className=\"mt-2\"\n        >\n            <Grid item xs={3} sm={3} md={3} className=\"pt-0\">\n                <InputTableTextControl\n                    control={control}\n                    name={`${name}.${indexInsured}.nominees[${indexNominee}].nomineeName`}\n                    label=\"Nominee Name\"\n                />\n            </Grid>\n\n            <Grid item xs={3} sm={3} md={3} className=\"pt-0\">\n                <InputTableSelectControl\n                    defaultValue=\"nric\"\n                    control={control}\n                    name={`${name}.${indexInsured}.nominees[${indexNominee}].nomineeTravelDocument`}\n                    label=\"Travel Document\"\n                    options={TRAVEL_DOCUMENT_TYPE}\n                />\n            </Grid>\n\n            <Grid item xs={3} sm={3} md={3} className=\"pt-0\">\n                <InputTableTextControl\n                    leadingZeros\n                    number={isNumber}\n                    control={control}\n                    name={`${name}.${indexInsured}.nominees[${indexNominee}].nomineeTravelDocumentValue`}\n                    label={nomineeTravelDocumentLabel}\n                    onBlur={(e) => {\n                        const isValidNRIC = validateDuplicateNRIC({\n                            list: nominees,\n                            name: \"nomineeTravelDocumentValue\",\n                            value: e.target.value,\n                            excludeIndex: indexNominee,\n                        })\n\n                        if (isValidNRIC > -1) {\n                            setError(\n                                `${name}.${indexInsured}.nominees[${indexNominee}].nomineeTravelDocumentValue`,\n                                { message: \"Duplicate NRIC found\", type: \"duplicateNomineeNRIC\" },\n                            )\n                            return\n                        }\n                    }}\n                />\n            </Grid>\n\n            <Grid item xs={3} sm={3} md={3} className=\"pt-0\">\n                <InputTableDateControl\n                    control={control}\n                    name={`${name}.${indexInsured}.nominees[${indexNominee}].nomineeDOB`}\n                    label=\"DOB\"\n                />\n            </Grid>\n\n            <Grid item xs={3} sm={3} md={3} className=\"pt-0\">\n                <InputTableSelectControl\n                    defaultValue=\"+60\"\n                    control={control}\n                    name={`${name}.${indexInsured}.nominees[${indexNominee}].nomineeCountryCode`}\n                    label=\"Country Code\"\n                    options={COUNTRY_CODE}\n                />\n            </Grid>\n\n            <Grid item xs={3} sm={3} md={3} className=\"pt-0\">\n                <InputTableTextControl\n                    control={control}\n                    name={`${name}.${indexInsured}.nominees[${indexNominee}].nomineeMobileNo`}\n                    label=\"Mobile No\"\n                    leadingZeros\n                    number\n                />\n            </Grid>\n\n            <Grid item xs={3} sm={3} md={3} className=\"pt-0\">\n                <InputTableTextControl\n                    control={control}\n                    name={`${name}.${indexInsured}.nominees[${indexNominee}].nomineeRelationship`}\n                    label=\"Relationship\"\n                />\n            </Grid>\n\n            <Grid item xs={3} sm={3} md={3} className=\"pt-0\">\n                <InputTableTextControl\n                    number\n                    control={control}\n                    name={`${name}.${indexInsured}.nominees[${indexNominee}].nomineeShare`}\n                    label=\"Share (%)\"\n                    onBlur={(e) => {\n                        const nomineesShare = nominees.map((i) => i.nomineeShare)\n                        const totalShare = nomineesShare.reduce(\n                            (previous, current, index, array) => {\n                                const previousShare = previous === \"\" ? 0 : previous\n                                const currentShare = current === \"\" ? 0 : current\n                                return parseFloat(previousShare) + parseFloat(currentShare)\n                            },\n                        )\n\n                        if (totalShare > 100) {\n                            setError(\n                                `${name}.${indexInsured}.nominees[${indexNominee}].nomineeShare`,\n                                { message: \"Invalid share (%)\" },\n                            )\n                        }\n                        setValue(`${name}.${indexInsured}.nomineesTotalShare`, totalShare)\n                    }}\n                />\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={12} className=\"pt-0 mt-3 mb-4\">\n                <Divider light sx={{ color: \"rgba(0, 0, 0, 0.52)\" }} />\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default NomineeForm\n","import React, { useEffect, useState } from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Button from \"@mui/material/Button\"\nimport IconButton from \"@mui/material/IconButton\"\nimport { BiTrash } from \"react-icons/bi\"\nimport { CCard, CCardBody } from \"@coreui/react\"\nimport Typography from \"@mui/material/Typography\"\nimport { useFieldArray } from \"react-hook-form\"\nimport { HiPlusSm } from \"react-icons/hi\"\nimport { BiMinusCircle } from \"react-icons/bi\"\nimport { useMediaQuery } from \"react-responsive\"\n\nimport { EnumInsured } from \"src/pages/insurance/utils/enum\"\nimport InputTableTextControl from \"src/components/inputs/InputTableTextControl\"\nimport InputTableDateControl from \"src/components/inputs/InputTableDateControl\"\nimport NomineeForm from \"src/pages/insurance/components/step2/forms/FormNominee\"\nimport InputTableSelectControl from \"src/components/inputs/InputTableSelectControl\"\nimport { COUNTRY_CODE, TRAVEL_DOCUMENT_TYPE, COVERAGE_TYPE } from \"src/utils/enum\"\nimport { convertNricToDob } from \"src/pages/insurance/utils/convert_nric_to_dob\"\n\nexport default function FormInsured({\n    control,\n    indexInsured,\n    name,\n    removeInsured,\n    getValues,\n    setError,\n    setValue,\n    validateDetails,\n    watch,\n    setDeletedNomineeArray,\n    watchInsuranceCoverage,\n}) {\n    const watchNomineesTotalShare = watch(`${name}.${indexInsured}.nomineesTotalShare`)\n    const { fields, append, remove, update } = useFieldArray({\n        name: `${name}.${indexInsured}.nominees`,\n        control,\n    })\n    const watchInsuredTravelDocument = watch(`${name}.${indexInsured}.insuredTravelDocument`)\n    const watchInsuredTravelDocumentValue = watch(\n        `${name}.${indexInsured}.insuredTravelDocumentValue`,\n    )\n    const [insuredTravelDocumentLabel, setInsuredTravelDocumentLabel] = useState(\"NRIC\")\n    const [isNumber, setIsNumber] = useState(true)\n    const isDesktop = useMediaQuery({ minWidth: 992 })\n    const nominees = getValues(`${name}.${indexInsured}.nominees`)\n\n    useEffect(() => {\n        if (fields.length === 0) {\n            append({\n                nomineeName: \"\",\n                nomineeTravelDocument: \"nric\",\n                nomineeTravelDocumentValue: \"\",\n                nomineeDOB: \"\",\n                nomineeRelationship: \"\",\n                nomineeShare: \"\",\n                nomineeCountryCode: \"+60\",\n                nomineeMobileNo: \"\",\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (watchInsuredTravelDocument) {\n            TRAVEL_DOCUMENT_TYPE?.map((item) => {\n                if (watchInsuredTravelDocument === item.value) {\n                    setInsuredTravelDocumentLabel(item.label)\n\n                    setIsNumber(false)\n                    if (watchInsuredTravelDocument === \"nric\") {\n                        setIsNumber(true)\n                    }\n                }\n                return true\n            })\n        }\n    }, [watchInsuredTravelDocument])\n\n    // Auto fill insured dob when user fill up nric\n    useEffect(() => {\n        if (watchInsuredTravelDocumentValue) {\n            if (watchInsuredTravelDocument === \"nric\") {\n                const nric = getValues(`${name}.${indexInsured}.insuredTravelDocumentValue`)\n                const returnDOB = convertNricToDob(nric)\n                setValue(`${name}.${indexInsured}.insuredDOB`, returnDOB)\n            }\n        }\n    }, [watchInsuredTravelDocumentValue])\n\n    const removeNominee = (index, nomineeId) => {\n        if (nomineeId) {\n            setDeletedNomineeArray((oldArray) => [...oldArray, { id: nomineeId }])\n        }\n\n        remove(index)\n    }\n\n    const copyDetails = () => {\n        setValue(`${name}.${indexInsured}.insuredFullName`, getValues(\"fullName\"))\n        setValue(`${name}.${indexInsured}.insuredTravelDocument`, getValues(\"travelDocument\"))\n        setValue(\n            `${name}.${indexInsured}.insuredTravelDocumentValue`,\n            getValues(\"travelDocumentValue\"),\n        )\n        setValue(`${name}.${indexInsured}.insuredDOB`, getValues(\"dob\"))\n        setValue(`${name}.${indexInsured}.insuredOccupation`, getValues(\"occupation\"))\n        setValue(`${name}.${indexInsured}.insuredAddress`, getValues(\"address\"))\n        setValue(`${name}.${indexInsured}.insuredCountryCode`, getValues(\"countryCode\"))\n        setValue(`${name}.${indexInsured}.insuredMobileNo`, getValues(\"mobileNo\"))\n    }\n\n    return (\n        <CCard\n            className=\"mb-4\"\n            style={{\n                backgroundColor: \"rgb(237, 247, 237)\",\n                width: isDesktop ? \"100%\" : \"1200px\",\n            }}\n        >\n            <CCardBody>\n                <div className=\"d-flex justify-content-between\">\n                    <div className=\"w-100 d-flex\">\n                        <Typography\n                            variant=\"subtitle2\"\n                            color=\"primary\"\n                            sx={{ fontSize: \"1.4em\", marginRight: \"1%\" }}\n                        >\n                            {/* 1. if coverage type is individual - Insured 1, Insured 2\n                                2. if coverage type is family - Insured, Spouse\n                                3. if coverage type is insured&spouse - Insured, Spouse\n                            */}\n                            {watchInsuranceCoverage === COVERAGE_TYPE.INDIVIDUAL\n                                ? \"Insured \" + (indexInsured + 1)\n                                : indexInsured === 0\n                                ? \"Insured\"\n                                : \"Spouse\"}\n                        </Typography>\n\n                        {indexInsured === 0 && (\n                            <div className=\"d-flex justify-content-between\">\n                                <Button\n                                    disableElevation\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    onClick={copyDetails}\n                                >\n                                    Same as Personal Information\n                                </Button>\n                            </div>\n                        )}\n\n                        {/* hide if coverage type is family and rhb - insured&spouse */}\n                        {indexInsured !== 0 && watchInsuranceCoverage === COVERAGE_TYPE.INDIVIDUAL && (\n                            <Grid item xs={12} sm={12} md={12}>\n                                <IconButton\n                                    color=\"error\"\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    className=\"w-100\"\n                                    onClick={removeInsured}\n                                >\n                                    <BiTrash size={\"1.3em\"} />\n                                </IconButton>\n                            </Grid>\n                        )}\n                    </div>\n                </div>\n\n                <Grid\n                    container\n                    spacing={{ xs: 2, md: 3 }}\n                    columns={{ xs: 12, sm: 12, md: 12 }}\n                    direction=\"row\"\n                    className=\"mt-2\"\n                >\n                    <Grid item xs={5} sm={5} md={5}>\n                        <InputTableTextControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredFullName`}\n                            label=\"Full Name\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} md={2}>\n                        <InputTableSelectControl\n                            defaultValue=\"nric\"\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredTravelDocument`}\n                            label=\"Travel Document\"\n                            options={TRAVEL_DOCUMENT_TYPE}\n                        />\n                    </Grid>\n\n                    <Grid item xs={3} sm={3} md={3}>\n                        <InputTableTextControl\n                            leadingZeros\n                            number={isNumber}\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredTravelDocumentValue`}\n                            label={insuredTravelDocumentLabel}\n                            onBlur={(e) =>\n                                validateDetails({\n                                    type: EnumInsured.NRIC,\n                                    name: `${name}.${indexInsured}.insuredTravelDocumentValue`,\n                                    value: e.target.value,\n                                })\n                            }\n                        />\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} md={2}>\n                        <InputTableDateControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredDOB`}\n                            label=\"DOB\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} md={2}>\n                        <InputTableSelectControl\n                            defaultValue=\"+60\"\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredCountryCode`}\n                            label=\"Country Code\"\n                            options={COUNTRY_CODE}\n                        />\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} md={2}>\n                        <InputTableTextControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredMobileNo`}\n                            label=\"Mobile No\"\n                            leadingZeros\n                            number\n                        />\n                    </Grid>\n\n                    <Grid item xs={3} sm={3} md={3}>\n                        <InputTableTextControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredOccupation`}\n                            label=\"Occupation\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={5} sm={5} md={5}>\n                        <InputTableTextControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredAddress`}\n                            label=\"Address\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={12}>\n                        <Typography\n                            variant=\"subtitle2\"\n                            color=\"primary\"\n                            style={{ paddingLeft: \"4%\" }}\n                        >\n                            Nominee Details\n                        </Typography>\n\n                        {fields.map((item, indexNominee) => (\n                            <div className=\"d-flex justify-content-between\" key={item.id}>\n                                <Grid\n                                    item\n                                    xs={0.5}\n                                    sm={0.5}\n                                    md={0.5}\n                                    style={{ paddingTop: \"12px\" }}\n                                >\n                                    {indexNominee !== 0 && (\n                                        <IconButton\n                                            color=\"error\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() => {\n                                                removeNominee(indexNominee, item.nomineeId)\n\n                                                const nomineesShare = nominees\n                                                    .filter((i, idx) => idx !== indexNominee)\n                                                    .map((i) => i.nomineeShare)\n\n                                                const totalShare = nomineesShare.reduce(\n                                                    (previous, current, index, array) => {\n                                                        const previousShare =\n                                                            previous === \"\" ? 0 : previous\n                                                        const currentShare =\n                                                            current === \"\" ? 0 : current\n                                                        return (\n                                                            parseFloat(previousShare) +\n                                                            parseFloat(currentShare)\n                                                        )\n                                                    },\n                                                )\n\n                                                setValue(\n                                                    `${name}.${indexInsured}.nomineesTotalShare`,\n                                                    totalShare,\n                                                )\n                                            }}\n                                        >\n                                            <BiMinusCircle size={\"1.3em\"} />\n                                        </IconButton>\n                                    )}\n                                </Grid>\n\n                                <NomineeForm\n                                    name={name}\n                                    indexInsured={indexInsured}\n                                    indexNominee={indexNominee}\n                                    control={control}\n                                    append={append}\n                                    update={update}\n                                    getValues={getValues}\n                                    setError={setError}\n                                    setValue={setValue}\n                                    watch={watch}\n                                />\n                            </div>\n                        ))}\n\n                        <div\n                            className=\"mt-3 d-flex justify-content-between\"\n                            style={{ paddingLeft: \"4%\" }}\n                        >\n                            {getValues(`insureds[${indexInsured}].nominees`)?.length < 9 && (\n                                <Button\n                                    disableRipple\n                                    disableElevation\n                                    style={{ backgroundColor: \"transparent\" }}\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        append({\n                                            nomineeName: \"\",\n                                            nomineeTravelDocument: \"nric\",\n                                            nomineeTravelDocumentValue: \"\",\n                                            nomineeDOB: \"\",\n                                            nomineeRelationship: \"\",\n                                            nomineeShare: \"\",\n                                            nomineeCountryCode: \"+60\",\n                                            nomineeMobileNo: \"\",\n                                        })\n                                    }}\n                                >\n                                    <div className=\"d-flex align-items-center\">\n                                        <HiPlusSm\n                                            size={\"1.3em\"}\n                                            style={{\n                                                color: \"#2a4a4b\",\n                                            }}\n                                        />\n                                        <div>Add other nominee</div>\n                                    </div>\n                                </Button>\n                            )}\n\n                            <Typography\n                                variant=\"body2\"\n                                color=\"primary\"\n                                style={{\n                                    marginRight: \"10%\",\n                                    color:\n                                        parseFloat(watchNomineesTotalShare) > 0 &&\n                                        parseFloat(watchNomineesTotalShare) !== 100\n                                            ? \"#d32f2f\"\n                                            : \"#009c99\",\n                                }}\n                            >\n                                {parseFloat(watchNomineesTotalShare) > 0 &&\n                                    parseFloat(watchNomineesTotalShare) !== 100 &&\n                                    \"Invalid\"}{\" \"}\n                                Total Share (%): <b>{watchNomineesTotalShare}</b>/ 100\n                            </Typography>\n                        </div>\n                    </Grid>\n                </Grid>\n            </CCardBody>\n        </CCard>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Button from \"@mui/material/Button\"\nimport IconButton from \"@mui/material/IconButton\"\nimport { BiTrash } from \"react-icons/bi\"\nimport { CCard, CCardBody } from \"@coreui/react\"\nimport Typography from \"@mui/material/Typography\"\nimport { useFieldArray } from \"react-hook-form\"\nimport { HiPlusSm } from \"react-icons/hi\"\nimport { BiMinusCircle } from \"react-icons/bi\"\nimport { useMediaQuery } from \"react-responsive\"\n\nimport { EnumInsured } from \"src/pages/insurance/utils/enum\"\nimport InputTableTextControl from \"src/components/inputs/InputTableTextControl\"\nimport InputTableDateControl from \"src/components/inputs/InputTableDateControl\"\nimport NomineeForm from \"src/pages/insurance/components/step2/forms/FormNominee\"\nimport InputTableSelectControl from \"src/components/inputs/InputTableSelectControl\"\nimport { TRAVEL_DOCUMENT_TYPE, INSURANCE, COUNTRY_CODE } from \"src/utils/enum\"\nimport { convertNricToDob } from \"src/pages/insurance/utils/convert_nric_to_dob\"\n\nexport default function FormChild({\n    control,\n    indexInsured,\n    name,\n    removeChild,\n    getValues,\n    setError,\n    setValue,\n    validateDetails,\n    watch,\n    selectedInsurance,\n    setDeletedNomineeArray,\n    watchInsuranceCoverage,\n}) {\n    const watchNomineesTotalShare = watch(`${name}.${indexInsured}.nomineesTotalShare`)\n    const { fields, append, remove, update } = useFieldArray({\n        name: `${name}.${indexInsured}.nominees`,\n        control,\n    })\n    const watchInsuredTravelDocument = watch(`${name}.${indexInsured}.insuredTravelDocument`)\n    const watchInsuredTravelDocumentValue = watch(\n        `${name}.${indexInsured}.insuredTravelDocumentValue`,\n    )\n    const [insuredTravelDocumentLabel, setInsuredTravelDocumentLabel] = useState(\"NRIC\")\n    const [isNumber, setIsNumber] = useState(true)\n    const isDesktop = useMediaQuery({ minWidth: 992 })\n    const nominees = getValues(`${name}.${indexInsured}.nominees`)\n\n    useEffect(() => {\n        if (fields.length === 0) {\n            append({\n                nomineeName: \"\",\n                nomineeTravelDocument: \"nric\",\n                nomineeTravelDocumentValue: \"\",\n                nomineeDOB: \"\",\n                nomineeRelationship: \"\",\n                nomineeShare: \"\",\n                nomineeCountryCode: \"+60\",\n                nomineeMobileNo: \"\"\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (watchInsuredTravelDocument) {\n            TRAVEL_DOCUMENT_TYPE?.map((item) => {\n                if (watchInsuredTravelDocument === item.value) {\n                    setInsuredTravelDocumentLabel(item.label)\n\n                    setIsNumber(false)\n                    if (watchInsuredTravelDocument === \"nric\") {\n                        setIsNumber(true)\n                    }\n                }\n                return true\n            })\n        }\n    }, [watchInsuredTravelDocument])\n\n    // Auto fill insured dob when user fill up nric\n    useEffect(() => {\n        if (watchInsuredTravelDocumentValue) {\n            if (watchInsuredTravelDocument === \"nric\") {\n                const nric = getValues(`${name}.${indexInsured}.insuredTravelDocumentValue`)\n                const returnDOB = convertNricToDob(nric)\n                setValue(`${name}.${indexInsured}.insuredDOB`, returnDOB)\n            }\n        }\n    }, [watchInsuredTravelDocumentValue])\n\n    const removeNominee = (index, nomineeId) => {\n        if (nomineeId) {\n            setDeletedNomineeArray((oldArray) => [...oldArray, { id: nomineeId }])\n        }\n\n        remove(index)\n    }\n\n    return (\n        <CCard\n            className=\"mb-4\"\n            style={{\n                backgroundColor: \"rgb(237, 247, 237)\",\n                width: isDesktop ? \"100%\" : \"1200px\",\n            }}\n        >\n            <CCardBody>\n                <div className=\"d-flex justify-content-between\">\n                    <div className=\"w-100 d-flex\">\n                        <Typography\n                            variant=\"subtitle2\"\n                            color=\"primary\"\n                            sx={{ fontSize: \"1.4em\", marginRight: \"1%\" }}\n                        >   \n                            {\"Child \" + (indexInsured + 1)}\n                        </Typography>\n\n                        {selectedInsurance?.insurer_code !== INSURANCE.RHB ? (\n                            <Grid item xs={12} sm={12} md={12}>\n                                <IconButton\n                                    color=\"error\"\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    className=\"w-100\"\n                                    onClick={removeChild}\n                                >\n                                    <BiTrash size={\"1.3em\"} />\n                                </IconButton>\n                            </Grid>\n                            ) \n                            : (\n                                indexInsured !== 0 && selectedInsurance?.insurer_code === INSURANCE.RHB && (\n                                    <Grid item xs={12} sm={12} md={12}>\n                                        <IconButton\n                                            color=\"error\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            className=\"w-100\"\n                                            onClick={removeChild}\n                                        >\n                                            <BiTrash size={\"1.3em\"} />\n                                        </IconButton>\n                                    </Grid>\n                                )\n                            )\n                        }\n                   \n                    </div>\n                </div>\n\n                <Grid\n                    container\n                    spacing={{ xs: 2, md: 3 }}\n                    columns={{ xs: 12, sm: 12, md: 12 }}\n                    direction=\"row\"\n                    className=\"mt-2\"\n                >\n                    <Grid item xs={5} sm={5} md={5}>\n                        <InputTableTextControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredFullName`}\n                            label=\"Full Name\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={2.5} sm={2.5} md={2.5}>\n                        <InputTableSelectControl\n                            defaultValue=\"nric\"\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredTravelDocument`}\n                            label=\"Travel Document\"\n                            options={TRAVEL_DOCUMENT_TYPE}\n                        />\n                    </Grid>\n\n                    <Grid item xs={2.5} sm={2.5} md={2.5}>\n                        <InputTableTextControl\n                            leadingZeros\n                            number={isNumber}\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredTravelDocumentValue`}\n                            label={insuredTravelDocumentLabel}\n                            onBlur={(e) =>\n                                validateDetails({\n                                    type: EnumInsured.NRIC,\n                                    name: `${name}.${indexInsured}.insuredTravelDocumentValue`,\n                                    value: e.target.value,\n                                })\n                            }\n                        />\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} md={2}>\n                        <InputTableDateControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredDOB`}\n                            label=\"DOB\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} md={2}>\n                        <InputTableSelectControl\n                            defaultValue=\"+60\"\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredCountryCode`}\n                            label=\"Country Code\"\n                            options={COUNTRY_CODE}\n                        />\n                    </Grid>\n\n                    <Grid item xs={2} sm={2} md={2}>\n                        <InputTableTextControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredMobileNo`}\n                            label=\"Mobile No\"\n                            type=\"number\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={3} sm={3} md={3}>\n                        <InputTableTextControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredOccupation`}\n                            label=\"Occupation\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={5} sm={5} md={5}>\n                        <InputTableTextControl\n                            control={control}\n                            name={`${name}.${indexInsured}.insuredAddress`}\n                            label=\"Address\"\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={12} md={12}>\n                        <Typography variant=\"subtitle2\" color=\"primary\" style={{ paddingLeft: \"4%\" }}>\n                            Nominee Details\n                        </Typography>\n\n                        {fields.map((item, indexNominee) => (\n                            <div className=\"d-flex justify-content-between\" key={item.id}>\n                                \n                                <Grid item xs={0.5} sm={0.5} md={0.5} style={{ paddingTop: \"12px\" }}>\n                                    {indexNominee !== 0 && (\n                                        <IconButton\n                                            color=\"error\"\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            onClick={() => {\n                                                removeNominee(indexNominee, item.nomineeId)\n                    \n                                                const nomineesShare = nominees\n                                                    .filter((i, idx) => idx !== indexNominee)\n                                                    .map((i) => i.nomineeShare)\n                    \n                                                const totalShare = nomineesShare.reduce(\n                                                    (previous, current, index, array) => {\n                                                        const previousShare = previous === \"\" ? 0 : previous\n                                                        const currentShare = current === \"\" ? 0 : current\n                                                        return parseFloat(previousShare) + parseFloat(currentShare)\n                                                    },\n                                                )\n                    \n                                                setValue(`${name}.${indexInsured}.nomineesTotalShare`, totalShare)\n                                            }}\n                                        >\n                                        <BiMinusCircle size={\"1.3em\"} />\n                                    </IconButton>)}\n                                </Grid>\n\n                                <NomineeForm\n                                    name={name}\n                                    indexInsured={indexInsured}\n                                    indexNominee={indexNominee}\n                                    control={control}\n                                    append={append}\n                                    update={update}\n                                    getValues={getValues}\n                                    setError={setError}\n                                    setValue={setValue}\n                                    watch={watch}\n                                />\n                            </div>\n                            \n                        ))}\n\n                        <div className=\"mt-3 d-flex justify-content-between\" style={{ paddingLeft: \"4%\" }}>\n                            {getValues(`child[${indexInsured}].nominees`)?.length < 9 && (\n                                <Button\n                                    disableRipple\n                                    disableElevation\n                                    style={{ backgroundColor: \"transparent\" }}\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        append({\n                                            nomineeName: \"\",\n                                            nomineeTravelDocument: \"nric\",\n                                            nomineeTravelDocumentValue: \"\",\n                                            nomineeDOB: \"\",\n                                            nomineeRelationship: \"\",\n                                            nomineeShare: \"\",\n                                            nomineeCountryCode: \"+60\",\n                                            nomineeMobileNo: \"\"\n                                        })\n                                    }}\n                                >\n                                    <div className=\"d-flex align-items-center\">\n                                        <HiPlusSm\n                                            size={\"1.3em\"}\n                                            style={{\n                                                color: \"#2a4a4b\",\n                                            }}\n                                        />\n                                        <div>Add other nominee</div>\n                                    </div>\n                                </Button>\n                            )}\n\n                            <Typography\n                                variant=\"body2\"\n                                color=\"primary\"\n                                style={{\n                                    marginRight: \"10%\",\n                                    color:\n                                        parseFloat(watchNomineesTotalShare) > 0 &&\n                                        parseFloat(watchNomineesTotalShare) !== 100\n                                            ? \"#d32f2f\"\n                                            : \"#009c99\",\n                                }}\n                            >\n                                {parseFloat(watchNomineesTotalShare) > 0 &&\n                                    parseFloat(watchNomineesTotalShare) !== 100 &&\n                                    \"Invalid\"}{\" \"}\n                                Total Share (%): <b>{watchNomineesTotalShare}</b>/ 100\n                            </Typography>\n                        </div>\n                    </Grid>\n                </Grid>\n            </CCardBody>\n        </CCard>\n    )\n}\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Button from \"@mui/material/Button\"\nimport { HiPlusSm } from \"react-icons/hi\"\n\nexport const ButtonNewInsured = ({ addInsured }) => {\n    return (\n        <div>\n            <Button\n                disableRipple\n                disableElevation\n                style={{ backgroundColor: \"transparent\" }}\n                color=\"primary\"\n                variant=\"text\"\n                size=\"small\"\n                onClick={addInsured}\n            >\n                <div className=\"d-flex align-items-center\">\n                    <HiPlusSm\n                        size={\"1.3em\"}\n                        style={{\n                            color: \"#2a4a4b\",\n                        }}\n                    />\n                    <div>Add other insured</div>\n                </div>\n            </Button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonNewInsured)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Button from \"@mui/material/Button\"\nimport { HiPlusSm } from \"react-icons/hi\"\n\nexport const ButtonNewChild = ({ addChild }) => {\n    return (\n        <div>\n            <Button\n                disableRipple\n                disableElevation\n                style={{ backgroundColor: \"transparent\" }}\n                color=\"primary\"\n                variant=\"text\"\n                size=\"small\"\n                onClick={addChild}\n            >\n                <div className=\"d-flex align-items-center\">\n                    <HiPlusSm\n                        size={\"1.3em\"}\n                        style={{\n                            color: \"#2a4a4b\",\n                        }}\n                    />\n                    <div>Add child</div>\n                </div>\n            </Button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonNewChild)\n","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { useForm, useFieldArray } from \"react-hook-form\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport Grid from \"@mui/material/Grid\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Button from \"@mui/material/Button\"\nimport LoadingButton from \"@mui/lab/LoadingButton\"\nimport Typography from \"@mui/material/Typography\"\n\nimport ConverageDetailsForm from \"src/pages/insurance/components/step2/forms/FormConverageDetails\"\nimport PersonalInformationForm from \"src/pages/insurance/components/step2/forms/FormPersonalInformation\"\nimport FormSchema from \"src/pages/insurance/components/step2/yup/schema\"\nimport InsuredForm from \"src/pages/insurance/components/step2/forms/FormInsured\"\nimport ChildForm from \"src/pages/insurance/components/step2/forms/FormChild\"\nimport ButtonNewInsured from \"src/pages/insurance/components/step2/buttons/ButtonNewInsured\"\nimport ButtonNewChild from \"src/pages/insurance/components/step2/buttons/ButtonNewChild\"\nimport { setInsuranceDetails, setIsSpouse } from \"src/action/ui_actions\"\nimport { doGetInsuranceRate, doResetGetInsuranceRateState } from \"src/action/api_actions\"\nimport { validateDuplicateNRIC, validateAge } from \"src/pages/insurance/utils/functions\"\nimport { EnumInsured } from \"src/pages/insurance/utils/enum\"\nimport { COVERAGE_TYPE, INSURANCE } from \"src/utils/enum\"\n\nlet optionsCoverageType = []\nlet countryList = []\n\nexport const Step2 = ({\n    doGetInsuranceRate,\n    setInsuranceDetails,\n    doResetGetInsuranceRateState,\n    back,\n    next,\n    insuranceDetailsForm,\n    selectedInsurance,\n    insuranceRateSuccess,\n    insuranceRateFail,\n    insuranceRateErrorMessage,\n    meta,\n    sales,\n    // isSpouse,\n    watchInsuranceCoverage,\n    setIsSpouse,\n    loggedInUser,\n}) => {\n    const { control, watch, trigger, getValues, setValue, setError, resetField } = useForm({\n        defaultValues: {\n            fullName: insuranceDetailsForm?.fullName,\n            travelDocument: insuranceDetailsForm?.travelDocument,\n            travelDocumentValue: insuranceDetailsForm?.travelDocumentValue,\n            dob: insuranceDetailsForm?.dob,\n            address: insuranceDetailsForm?.address,\n            occupation: insuranceDetailsForm?.occupation,\n            email: insuranceDetailsForm?.email,\n            countryCode: insuranceDetailsForm?.countryCode,\n            mobileNo: insuranceDetailsForm?.mobileNo,\n            departureDate: insuranceDetailsForm?.departureDate,\n            returnDate: insuranceDetailsForm?.returnDate,\n            tripType: insuranceDetailsForm?.tripType,\n            coverageType: insuranceDetailsForm?.coverageType,\n            travelDelayUpgrade: insuranceDetailsForm?.travelDelayUpgrade,\n            destination: countryList\n                ?.filter((c) => insuranceDetailsForm?.destination.map((d) => d.code).includes(c.id))\n                .map((c) => {\n                    return { label: c.country_name, code: c.id }\n                }),\n            isWithinMalaysia: insuranceDetailsForm?.isWithinMalaysia,\n            isSpouse: insuranceDetailsForm?.isSpouse,\n            insureds: insuranceDetailsForm?.insureds,\n            child: insuranceDetailsForm?.child,\n        },\n        resolver: yupResolver(FormSchema),\n        mode: \"all\",\n    })\n    const { fields, append, remove } = useFieldArray({ name: \"insureds\", control })\n    const {\n        fields: childFields,\n        append: childAppend,\n        remove: childRemove,\n    } = useFieldArray({ name: \"child\", control })\n    const watchDepartureDate = watch(\"departureDate\")\n    const watchTravelDocument = watch(\"travelDocument\")\n    const watchTravelDocumentValue = watch(\"travelDocumentValue\")\n    const watchTripType = watch(\"tripType\")\n    const watchCoverageType = watch(\"coverageType\")\n    const watchIsWithinMalaysia = watch(\"isWithinMalaysia\")\n    const watchIsSpouse = watch(\"isSpouse\")\n    const watchDestination = watch(\"destination\")\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [deletedNomineeArray, setDeletedNomineeArray] = useState([])\n    const [deletedInsuredArray, setDeletedInsuredArray] = useState([])\n    const [isloading, setIsLoading] = useState(false)\n    const [isFromCoverageType, setIsFromCoverageType] = useState(false)\n    const [isFromOtherPage, setIsFromOtherPage] = useState(true)\n    const [isFromOtherPageIsSpouse, setIsFromOtherPageIsSpouse] = useState(true)\n    const [customerApplicationId, setCustomerApplicationId] = useState(null)\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n\n        if (!selectedInsurance) {\n            back()\n        }\n\n        optionsCoverageType = [\n            { label: \"Individual\", value: \"individual\" },\n            { label: \"Family\", value: \"family\" },\n        ]\n\n        if (selectedInsurance?.insurer_code === INSURANCE.RHB) {\n            optionsCoverageType.push({ label: \"Insured & Spouse\", value: \"insured & spouse\" })\n        }\n\n        countryList = meta?.destination_list\n        if (selectedInsurance?.insurer_code === INSURANCE.AIG) {\n            if (selectedInsurance?.start_from_price_domestic) {\n                countryList = meta?.destination_list.filter((item) => item.is_domestic === 1)\n            } else {\n                countryList = meta?.destination_list.filter((item) => item.is_domestic === 0)\n            }\n        }\n\n        if (!insuranceDetailsForm || insuranceDetailsForm?.insureds?.length === 0) {\n            addInsured()\n        }\n\n        setCustomerApplicationId(insuranceDetailsForm?.customerApplicationId)\n\n        const unloadCallback = (event) => {\n            event.preventDefault()\n            event.returnValue = \"\"\n            return \"\"\n        }\n\n        window.addEventListener(\"beforeunload\", unloadCallback)\n        return () => window.removeEventListener(\"beforeunload\", unloadCallback)\n    }, [])\n\n    useEffect(() => {\n        if (insuranceRateSuccess) {\n            setInsuranceDetails({\n                insurerCode: selectedInsurance?.insurer_code,\n                fullName: getValues(\"fullName\"),\n                travelDocument: getValues(\"travelDocument\"),\n                travelDocumentValue: getValues(\"travelDocumentValue\"),\n                dob: getValues(\"dob\"),\n                address: getValues(\"address\"),\n                occupation: getValues(\"occupation\"),\n                email: getValues(\"email\"),\n                countryCode: getValues(\"countryCode\"),\n                mobileNo: getValues(\"mobileNo\"),\n                coverageType: getValues(\"coverageType\"),\n                departureDate: getValues(\"departureDate\"),\n                returnDate: getValues(\"returnDate\"),\n                travelDelayUpgrade: getValues(\"travelDelayUpgrade\"),\n                destination: getValues(\"destination\"),\n                isWithinMalaysia: getValues(\"isWithinMalaysia\"),\n                isSpouse: getValues(\"isSpouse\"),\n                tripType: getValues(\"tripType\"),\n                insureds: getValues(\"insureds\"),\n                nominees: getValues(\"insureds.nominees\"),\n                child: getValues(\"child\"),\n                childNominees: getValues(\"child.nominees\"),\n                customerApplicationId: customerApplicationId,\n                token: insuranceDetailsForm?.token,\n                deletedNominee: deletedNomineeArray,\n                deletedInsured: deletedInsuredArray,\n                referralId: sales?.id,\n            })\n\n            setIsLoading(false)\n            setErrorMessage(null)\n            doResetGetInsuranceRateState()\n            setIsFromOtherPage(true)\n            setIsFromOtherPageIsSpouse(true)\n            next()\n        }\n\n        if (insuranceRateFail) {\n            setIsLoading(false)\n            setErrorMessage(insuranceRateErrorMessage)\n            doResetGetInsuranceRateState()\n        }\n    }, [insuranceRateSuccess, insuranceRateFail])\n\n    useEffect(() => {\n        // Do not remove insured form if from step3\n        if (watchIsSpouse) {\n            // If is route from step3, do not append spouse\n            if (!isFromOtherPageIsSpouse) {\n                setIsFromCoverageType(false)\n                addInsured()\n            }\n\n            setIsFromOtherPageIsSpouse(false)\n        } else {\n            // If is not click from coverage type dropdown and\n            // is not route from step3, remove spouse\n            if (!isFromCoverageType && !isFromOtherPage) {\n                const spouseInsured = getValues(\"insureds\")\n                removeInsured(1, spouseInsured[1])\n                // remove(1)\n            }\n            // If is not route from step3\n            else if (!isFromOtherPageIsSpouse) {\n                if (watchInsuranceCoverage !== COVERAGE_TYPE.INSURED_AND_SPOUSE) {\n                    const spouseInsured = getValues(\"insureds\")\n                    removeInsured(1, spouseInsured[1])\n                    // remove(1)\n                }\n            }\n            setIsFromOtherPageIsSpouse(false)\n        }\n    }, [watchIsSpouse])\n\n    useEffect(() => {\n        if (watchInsuranceCoverage) {\n            setIsFromCoverageType(true)\n            setIsSpouse(false)\n\n            // Do not remove insured form if from step3\n            if (!isFromOtherPage) {\n                remove()\n                addInsured()\n                setCustomerApplicationId(null)\n\n                if (watchInsuranceCoverage === COVERAGE_TYPE.INSURED_AND_SPOUSE) {\n                    resetField(\"isSpouse\")\n\n                    // append spouse\n                    addInsured()\n\n                    // remove child if any\n                    childRemove()\n                } else if (watchInsuranceCoverage === COVERAGE_TYPE.FAMILY) {\n                    if (selectedInsurance?.insurer_code === INSURANCE.RHB) {\n                        addChild()\n                    }\n                } else {\n                    // Individual\n                    childRemove()\n                    resetField(\"isSpouse\")\n                }\n            }\n\n            setIsFromOtherPage(false)\n        }\n    }, [watchInsuranceCoverage])\n\n    useEffect(() => {\n        const isEmptyFullName = getValues(\"fullName\") === \"\"\n        const isEmptyEmail = getValues(\"email\") === \"\"\n        const isEmptyAddress = getValues(\"address\") === \"\"\n        const isEmptyMobileNo = getValues(\"mobileNo\") === \"\"\n\n        if (isEmptyFullName) {\n            setValue(\"fullName\", loggedInUser?.customer?.name)\n        }\n\n        if (isEmptyEmail) {\n            setValue(\"email\", loggedInUser?.customer?.email)\n        }\n\n        if (isEmptyAddress) {\n            setValue(\"address\", loggedInUser?.customer?.address)\n        }\n\n        if (isEmptyMobileNo) {\n            setValue(\"mobileNo\", loggedInUser?.customer?.phone_number)\n        }\n    }, [loggedInUser])\n\n    const addInsured = () => {\n        append({\n            insuredFullName: \"\",\n            insuredTravelDocument: \"nric\",\n            insuredTravelDocumentValue: \"\",\n            insuredAddress: \"\",\n            insuredOccupation: \"\",\n            insuredCountryCode: \"+60\",\n            insuredMobileNo: \"\",\n            nomineesTotalShare: \"0\",\n        })\n    }\n\n    const addChild = () => {\n        childAppend({\n            insuredFullName: \"\",\n            insuredTravelDocument: \"nric\",\n            insuredTravelDocumentValue: \"\",\n            insuredAddress: \"\",\n            insuredOccupation: \"\",\n            nomineesTotalShare: \"0\",\n        })\n    }\n\n    const removeInsured = (index, item) => {\n        if (item?.insured_id) {\n            setDeletedInsuredArray((oldArray) => [...oldArray, { id: item?.insured_id }])\n\n            //Find nominee under insured\n            const nomineeIdArray = item?.nominees.map((item) => item.nomineeId)\n\n            for (let i = 0; i < nomineeIdArray.length; i++) {\n                setDeletedNomineeArray((oldArray) => [...oldArray, { id: nomineeIdArray[i] }])\n            }\n        }\n\n        remove(index)\n    }\n\n    const removeChild = (index, item) => {\n        if (item?.insured_id) {\n            setDeletedInsuredArray((oldArray) => [...oldArray, { id: item?.insured_id }])\n\n            //Find nominee under insured\n            const nomineeIdArray = item?.nominees.map((item) => item.nomineeId)\n\n            for (let i = 0; i < nomineeIdArray.length; i++) {\n                setDeletedNomineeArray((oldArray) => [...oldArray, { id: nomineeIdArray[i] }])\n            }\n        }\n\n        childRemove(index)\n    }\n\n    const validateNomineeNRIC = () => {\n        const insureds = getValues(\"insureds\")\n        let duplicateNRICList = []\n\n        for (let i = 0; i < insureds.length; i++) {\n            const nominees = insureds[i]?.nominees\n\n            for (let k = 0; k < nominees.length; k++) {\n                const nominee = nominees[k]\n                const duplicateNRIC = nominees.filter(\n                    (item, index) =>\n                        item?.nomineeTravelDocumentValue === nominee?.nomineeTravelDocumentValue &&\n                        index !== k,\n                )\n\n                duplicateNRICList.push(duplicateNRIC)\n\n                if (duplicateNRIC.length > 0) {\n                    setError(`insureds[${i}].nominees[${k}].nomineeTravelDocumentValue`, {\n                        message: \"Duplicate NRIC found\",\n                    })\n                }\n            }\n        }\n\n        return {\n            invalid: duplicateNRICList.flat().length > 0,\n            error: \"Duplicate nominee NRIC found\",\n        }\n    }\n\n    const validateInsuredNRIC = () => {\n        const insureds = getValues(\"insureds\")\n        let duplicateNRICList = []\n\n        for (let i = 0; i < insureds.length; i++) {\n            const insured = insureds[i]\n\n            const duplicateNRIC = insureds.filter(\n                (item, index) =>\n                    insured?.insuredTravelDocumentValue !== \"\" &&\n                    insured?.insuredTravelDocumentValue === item?.insuredTravelDocumentValue &&\n                    index !== i,\n            )\n\n            duplicateNRICList.push(duplicateNRIC)\n\n            if (duplicateNRIC.length > 0) {\n                setError(`insureds[${i}].insuredTravelDocumentValue`, {\n                    message: \"Duplicate NRIC found\",\n                })\n            }\n        }\n\n        return {\n            invalid: duplicateNRICList.flat().length > 0,\n            error: \"Duplicate insured NRIC found\",\n        }\n    }\n\n    const validateNomineeTotalShare = () => {\n        let validInsured = []\n        const insureds = getValues(\"insureds\")\n        for (let i = 0; i < insureds.length; i++) {\n            const nominees = insureds[i]?.nominees\n\n            const nomineesShare = nominees.map((i) => i.nomineeShare)\n            const totalShare = nomineesShare.reduce((previous, current, index, array) => {\n                const previousShare = previous === \"\" ? 0 : previous\n                const currentShare = current === \"\" ? 0 : current\n                return parseFloat(previousShare) + parseFloat(currentShare)\n            })\n\n            if (parseFloat(totalShare) !== 100) {\n                validInsured.push(false)\n            } else {\n                validInsured.push(true)\n            }\n        }\n\n        if (validInsured.includes(false)) {\n            return {\n                invalid: true,\n                error: \"Invalid total nominees share (%)\",\n            }\n        } else {\n            return {\n                invalid: false,\n                error: null,\n            }\n        }\n    }\n\n    const validateInsuredCoverageType = () => {\n        const coverageType = getValues(\"coverageType\")\n        const insureds = getValues(\"insureds\")\n        const child = getValues(\"child\")\n        const combinedInsured = insureds.concat(child)\n\n        if (coverageType === COVERAGE_TYPE.FAMILY) {\n            if (combinedInsured.length < 2) {\n                return {\n                    invalid: true,\n                    error: \"Unable to proceed, for family, must more than 1 insured.\",\n                }\n            }\n        }\n\n        if (coverageType === COVERAGE_TYPE.INSURED_AND_SPOUSE) {\n            if (combinedInsured.length !== 2) {\n                return {\n                    invalid: true,\n                    error: \"Unable to proceed, for insured & spouse, must equal 2 insured.\",\n                }\n            }\n        }\n    }\n\n    const validateInsuredAge = () => {\n        const insureds = getValues(\"insureds\")\n\n        for (let i = 0; i < insureds.length; i++) {\n            const insured = insureds[i]\n\n            if (\n                insured?.insuredTravelDocument === \"nric\" &&\n                insured?.insuredTravelDocumentValue?.length === 12\n            ) {\n                const { isValidAge, errorMessage } = validateAge({\n                    nric: insured?.insuredTravelDocumentValue,\n                    insurerCode: selectedInsurance?.insurer_code,\n                    packageName: selectedInsurance?.package_name,\n                    coverageType: getValues(\"coverageType\"),\n                    tripTypeId: getValues(\"tripType\"),\n                    type: \"adult\",\n                })\n\n                if (!isValidAge) {\n                    setError(`insureds.${i}.insuredTravelDocumentValue`, {\n                        message: errorMessage,\n                        type: \"invalidChildAge\",\n                    })\n\n                    return {\n                        invalid: !isValidAge,\n                        error: errorMessage,\n                    }\n                }\n            } else {\n                return {\n                    invalid: false,\n                    error: null,\n                }\n            }\n        }\n    }\n\n    const validateChildAge = () => {\n        const children = getValues(\"child\")\n\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i]\n\n            if (\n                child?.insuredTravelDocument === \"nric\" &&\n                child?.insuredTravelDocumentValue?.length === 12\n            ) {\n                const { isValidAge, errorMessage } = validateAge({\n                    nric: child?.insuredTravelDocumentValue,\n                    insurerCode: selectedInsurance?.insurer_code,\n                    packageName: selectedInsurance?.package_name,\n                    coverageType: getValues(\"coverageType\"),\n                    tripTypeId: getValues(\"tripType\"),\n                    type: \"child\",\n                })\n\n                if (!isValidAge) {\n                    setError(`child.${i}.insuredTravelDocumentValue`, {\n                        message: errorMessage,\n                        type: \"invalidChildAge\",\n                    })\n\n                    return {\n                        invalid: !isValidAge,\n                        error: errorMessage,\n                    }\n                }\n            } else {\n                return {\n                    invalid: false,\n                    error: null,\n                }\n            }\n        }\n    }\n\n    const proceed = async () => {\n        const validInsuredForm = await trigger()\n        const validInsuredNRIC = validateInsuredNRIC()\n        const validNomineeNRIC = validateNomineeNRIC()\n        const validNomineeTotalShare = validateNomineeTotalShare()\n        const validInsuredCoverageType = validateInsuredCoverageType()\n        const validInsuredAge = validateInsuredAge()\n        const validChildAge = validateChildAge()\n\n        if (!validInsuredForm) {\n            setErrorMessage(\"Please fill in all the required fields.\")\n            return\n        }\n\n        if (validInsuredNRIC?.invalid) {\n            setErrorMessage(validInsuredNRIC?.error)\n            return\n        }\n\n        if (validNomineeNRIC?.invalid) {\n            setErrorMessage(validNomineeNRIC?.error)\n            return\n        }\n\n        if (validNomineeTotalShare?.invalid) {\n            setErrorMessage(validNomineeTotalShare?.error)\n            return\n        }\n\n        if (validInsuredCoverageType?.invalid) {\n            setErrorMessage(validInsuredCoverageType?.error)\n            return\n        }\n\n        if (validInsuredAge?.invalid) {\n            setErrorMessage(validInsuredAge?.error)\n            return\n        }\n\n        if (validChildAge?.invalid) {\n            setErrorMessage(validChildAge?.error)\n            return\n        }\n\n        setIsLoading(true)\n\n        doGetInsuranceRate({\n            packageId: selectedInsurance?.id,\n            coverageType: getValues(\"coverageType\"),\n            tripTypeId: getValues(\"tripType\"),\n            destinations: getValues(\"destination\").map((item) => item.code),\n            departureDate: getValues(\"departureDate\"),\n            returnDate: getValues(\"returnDate\"),\n            travelDelayUpgrade: getValues(\"travelDelayUpgrade\"),\n            insureds: getValues(\"insureds\").filter((i) => i.insuredFullName),\n            child: getValues(\"child\").filter((i) => i.insuredFullName),\n        })\n    }\n\n    return (\n        <div id=\"insurance-step-2-wrapper\" className=\"mt-5\">\n            <div id=\"insurance-step-2-title\" className=\"mb-4\">\n                <Grid container columns={{ xs: 1, sm: 12, md: 12 }}>\n                    <Grid item xs={1} sm={5.3} md={2.8} className=\"my-auto\">\n                        <Typography variant=\"h5\" component=\"div\">\n                            Please complete this form :\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={1} sm={6.7} md={9.2}>\n                        <span\n                            className=\"p-2\"\n                            style={{\n                                color: \"#009c99\",\n                                border: \"2px solid #009c99\",\n                                borderRadius: \"4px\",\n                                backgroundColor: \"rgb(237, 247, 237)\",\n                                fontSize: \"20px\",\n                            }}\n                        >\n                            {selectedInsurance?.package_name}\n                        </span>\n                    </Grid>\n                </Grid>\n            </div>\n\n            <Grid container spacing={{ xs: 2, md: 5 }} columns={{ xs: 1, sm: 1, md: 12 }}>\n                <Grid item xs={1} sm={1} md={6}>\n                    <Card variant=\"outlined\">\n                        <CardContent>\n                            <PersonalInformationForm\n                                control={control}\n                                watchTravelDocument={watchTravelDocument}\n                                watchTravelDocumentValue={watchTravelDocumentValue}\n                                getValues={getValues}\n                                setValue={setValue}\n                            />\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                <Grid item xs={1} sm={1} md={6}>\n                    <Card variant=\"outlined\" className=\"h-100\">\n                        <CardContent>\n                            <ConverageDetailsForm\n                                control={control}\n                                resetField={resetField}\n                                setValue={setValue}\n                                getValues={getValues}\n                                watchTripType={watchTripType}\n                                watchCoverageType={watchCoverageType}\n                                watchDepartureDate={watchDepartureDate}\n                                watchIsWithinMalaysia={watchIsWithinMalaysia}\n                                watchIsSpouse={watchIsSpouse}\n                                watchDestination={watchDestination}\n                            />\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n\n            <div className=\"mt-4\" style={{ overflowX: \"auto\" }}>\n                {fields.map((item, index) => (\n                    <InsuredForm\n                        name=\"insureds\"\n                        key={item.id}\n                        indexInsured={index}\n                        control={control}\n                        getValues={getValues}\n                        setError={setError}\n                        setValue={setValue}\n                        watch={watch}\n                        watchInsuranceCoverage={watchInsuranceCoverage}\n                        removeInsured={() => removeInsured(index, item)}\n                        setDeletedNomineeArray={setDeletedNomineeArray}\n                        validateDetails={({ type, name, value }) => {\n                            switch (type) {\n                                case EnumInsured.NRIC:\n                                    const isValid = validateDuplicateNRIC({\n                                        list: fields,\n                                        name: \"insuredTravelDocumentValue\",\n                                        value,\n                                        excludeIndex: index,\n                                    })\n\n                                    if (isValid > -1) {\n                                        setError(name, {\n                                            message: \"Duplicate NRIC found\",\n                                            type: \"duplicateInsuredNRIC\",\n                                        })\n                                    }\n\n                                    if (value.length === 12) {\n                                        const { isValidAge, errorMessage } = validateAge({\n                                            nric: value,\n                                            insurerCode: selectedInsurance?.insurer_code,\n                                            packageName: selectedInsurance?.package_name,\n                                            coverageType: getValues(\"coverageType\"),\n                                            tripTypeId: getValues(\"tripType\"),\n                                            type: \"adult\",\n                                        })\n\n                                        if (!isValidAge) {\n                                            setError(name, {\n                                                message: errorMessage,\n                                                type: \"invalidInsuredAge\",\n                                            })\n                                        }\n                                    }\n                                    break\n                                default:\n                                    return\n                            }\n                        }}\n                    />\n                ))}\n            </div>\n\n            <div className=\"mt-4\" style={{ overflowX: \"auto\" }}>\n                {childFields.map((item, index) => (\n                    <ChildForm\n                        name=\"child\"\n                        key={item.id}\n                        indexInsured={index}\n                        control={control}\n                        getValues={getValues}\n                        setError={setError}\n                        setValue={setValue}\n                        watch={watch}\n                        selectedInsurance={selectedInsurance}\n                        watchInsuranceCoverage={watchInsuranceCoverage}\n                        removeChild={() => removeChild(index, item)}\n                        setDeletedNomineeArray={setDeletedNomineeArray}\n                        validateDetails={({ type, name, value }) => {\n                            switch (type) {\n                                case EnumInsured.NRIC:\n                                    const isValid = validateDuplicateNRIC({\n                                        list: childFields,\n                                        name: \"insuredTravelDocumentValue\",\n                                        value,\n                                        excludeIndex: index,\n                                    })\n\n                                    if (isValid > -1) {\n                                        setError(name, {\n                                            message: \"Duplicate NRIC found\",\n                                            type: \"duplicateInsuredNRIC\",\n                                        })\n                                    }\n\n                                    if (value.length === 12) {\n                                        const { isValidAge, errorMessage } = validateAge({\n                                            nric: value,\n                                            insurerCode: selectedInsurance?.insurer_code,\n                                            packageName: selectedInsurance?.package_name,\n                                            coverageType: getValues(\"coverageType\"),\n                                            tripTypeId: getValues(\"tripType\"),\n                                            type: \"child\",\n                                        })\n\n                                        if (!isValidAge) {\n                                            setError(name, {\n                                                message: errorMessage,\n                                                type: \"invalidChildAge\",\n                                            })\n                                        }\n                                    }\n                                    break\n                                default:\n                                    return\n                            }\n                        }}\n                    />\n                ))}\n            </div>\n\n            {getValues(\"insureds\")?.length < 9 &&\n                selectedInsurance?.insurer_code !== INSURANCE.RHB &&\n                watchInsuranceCoverage === COVERAGE_TYPE.INDIVIDUAL && (\n                    <ButtonNewInsured addInsured={addInsured} />\n                )}\n\n            {getValues(\"child\")?.length < 9 && watchInsuranceCoverage === COVERAGE_TYPE.FAMILY && (\n                <ButtonNewChild addChild={addChild} />\n            )}\n\n            <div className=\"d-flex justify-content-end\">\n                <Typography variant=\"subtitle2\" color=\"error\">\n                    {errorMessage}\n                </Typography>\n            </div>\n\n            <div className=\"d-flex justify-content-end mt-3\">\n                <Button\n                    disableElevation\n                    className=\"m-2\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={() => back()}\n                >\n                    Back\n                </Button>\n                <LoadingButton\n                    disableElevation\n                    className=\"m-2\"\n                    size=\"small\"\n                    variant=\"contained\"\n                    loading={isloading}\n                    onClick={proceed}\n                >\n                    Next\n                </LoadingButton>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    insuranceDetailsForm: state.insurance.insuranceDetailsForm,\n    selectedInsurance: state.insurance.selectedInsurance,\n    insuranceRateSuccess: state.insurance.insuranceRateSuccess,\n    insuranceRateFail: state.insurance.insuranceRateFail,\n    insuranceRateErrorMessage: state.insurance.insuranceRateErrorMessage,\n    meta: state.core.meta,\n    sales: state.insurance.sales,\n    // isSpouse: state.insurance.isSpouse,\n    watchInsuranceCoverage: state.insurance.watchInsuranceCoverage,\n    watchInsuranceCoverage: state.insurance.watchInsuranceCoverage,\n    loggedInUser: state.core.loggedInUser,\n})\n\nconst mapDispatchToProps = {\n    setInsuranceDetails,\n    doGetInsuranceRate,\n    doResetGetInsuranceRateState,\n    setIsSpouse,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Step2)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\"\nimport { format } from \"date-fns\"\n\nexport const PersonalInformationCard = ({ back, insuranceDetailsForm, sales }) => {\n    return (\n        <Card variant=\"outlined\" className=\"p-2\">\n            <CardContent>\n                <div className=\"d-flex justify-content-between align-self-center\">\n                    <Typography variant={\"div\"} className=\"summary-card-title\">\n                        <b>Personal Information</b>\n                    </Typography>\n\n                    <div className=\"d-inline-block\">\n                        <Button\n                            disableElevation\n                            size=\"small\"\n                            variant=\"contained\"\n                            onClick={() => back()}\n                        >\n                            Edit\n                        </Button>\n                    </div>\n                </div>\n\n                <div className=\"mb-3 pb-2\"></div>\n\n                <Box sx={{ width: \"100%\" }}>\n                    <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                        <Grid item xs={12} className=\"pt-2 pl-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Full Name\n                                </Typography>\n                                <div>{insuranceDetailsForm?.fullName || \"-\"}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Email\n                                </Typography>\n                                <div>{insuranceDetailsForm?.email || \"-\"}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Travel Document\n                                </Typography>\n                                <div className=\"text-uppercase\">\n                                    {insuranceDetailsForm?.travelDocument || \"-\"}{\" \"}\n                                    {insuranceDetailsForm?.travelDocumentValue}\n                                </div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    DOB\n                                </Typography>\n                                <div className=\"text-uppercase\">\n                                    {insuranceDetailsForm?.dob &&\n                                        format(new Date(insuranceDetailsForm?.dob), \"d MMM yyyy\")}\n                                </div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Mobile No\n                                </Typography>\n                                <div>{insuranceDetailsForm?.countryCode + insuranceDetailsForm?.mobileNo}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Address\n                                </Typography>\n                                <div>{insuranceDetailsForm?.address || \"-\"}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Occupation\n                                </Typography>\n                                <div>{insuranceDetailsForm?.occupation || \"-\"}</div>\n                            </div>\n                        </Grid>\n\n                        {sales?.name && (\n                            <Grid item xs={12} className=\"pt-2\">\n                                <div>\n                                    <Typography variant=\"subtitle2\" color=\"primary\">\n                                        Sales\n                                    </Typography>\n                                    <div>{sales?.name || \"-\"}</div>\n                                </div>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Box>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    insuranceDetailsForm: state.insurance.insuranceDetailsForm,\n    sales: state.insurance.sales,\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalInformationCard)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\"\nimport { format } from \"date-fns\"\n\nimport { TRIP_TYPE } from \"src/utils/enum\"\n\nexport const CoverageDetailsCard = ({ back, insuranceDetailsForm, meta }) => {\n    const showTripType = () => {\n        if (insuranceDetailsForm?.tripType) {\n            return meta?.trip_type_list\n                ?.filter((item) => item.id === insuranceDetailsForm?.tripType)\n                ?.map((item) => item.trip_type_name)\n        } else {\n            return \"-\"\n        }\n    }\n\n    const showDestination = () => {\n        if (insuranceDetailsForm?.destination?.length > 0) {\n            return insuranceDetailsForm?.destination?.map((item) => item.label).join(\", \")\n        } else {\n            return \"-\"\n        }\n    }\n\n    const showTravelPeriod = () => {\n        if (!insuranceDetailsForm?.departureDate) {\n            return \"-\"\n        }\n\n        if (insuranceDetailsForm?.tripType === TRIP_TYPE.ANNUAL.id) {\n            return <div>{format(new Date(insuranceDetailsForm?.departureDate), \"d/MM/yyyy\")}</div>\n        } else {\n            return (\n                <div>\n                    {format(new Date(insuranceDetailsForm?.departureDate), \"d/MM/yyyy\")} - {\"\"}\n                    {format(new Date(insuranceDetailsForm?.returnDate), \"d/MM/yyyy\")}\n                </div>\n            )\n        }\n    }\n    return (\n        <Card variant=\"outlined\" className=\"p-2 h-100\">\n            <CardContent>\n                <div className=\"d-flex justify-content-between align-self-center\">\n                    <Typography variant=\"div\" className=\"summary-card-title\">\n                        <b>Trip Details</b>\n                    </Typography>\n\n                    <div className=\"d-inline-block\">\n                        <Button\n                            disableElevation\n                            size=\"small\"\n                            variant=\"contained\"\n                            onClick={() => back()}\n                        >\n                            Edit\n                        </Button>\n                    </div>\n                </div>\n\n                <div className=\"mb-3 pb-2\"></div>\n\n                <Box sx={{ width: \"100%\" }}>\n                    <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Destination\n                                </Typography>\n                                <div>{showDestination()}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Travel Period\n                                </Typography>\n                                <div>{showTravelPeriod()}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Trip Type\n                                </Typography>\n                                <div>{showTripType()}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2 pl-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Coverage Type\n                                </Typography>\n                                <div className=\"text-capitalize\">\n                                    {insuranceDetailsForm?.coverageType || \"-\"}\n                                </div>\n                            </div>\n                        </Grid>\n\n                        {insuranceDetailsForm?.travelDelayUpgrade !== undefined && (\n                            <Grid item xs={12} className=\"pt-2 pl-2\">\n                                <div>\n                                    <Typography variant=\"subtitle2\" color=\"primary\">\n                                        Travel Delay Upgrade\n                                    </Typography>\n                                    <div className=\"text-capitalize\">\n                                        {insuranceDetailsForm?.travelDelayUpgrade == 1 ? \"Yes\" : \"No\"}\n                                    </div>\n                                </div>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Box>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    insuranceDetailsForm: state.insurance.insuranceDetailsForm,\n    meta: state.core.meta,\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CoverageDetailsCard)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Card from \"@mui/material/Card\"\nimport Divider from \"@mui/material/Divider\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Typography from \"@mui/material/Typography\"\nimport Box from \"@mui/material/Box\"\n\nexport const CardInsuranceRateDetails = ({ packageRateDetails }) => {\n    const labelStyle = {\n        fontSize: \"16px\",\n        marginBottom: \"1rem\",\n        color: \"#3D3D3D\",\n        fontWeight: \"700\",\n    }\n\n    const valueStyle = {\n        fontSize: \"1rem\",\n        marginBottom: \"1rem\",\n        color: \"#808080\",\n        fontWeight: \"700\",\n    }\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <Card variant=\"outlined\" className=\"p-2\" style={{ border: \"2px solid #009c99\" }}>\n                <CardContent>\n                    <div className=\"mb-3\">\n                        <Typography variant=\"div\" className=\"summary-card-title\">\n                            <b>Quotation Summary</b>\n                        </Typography>\n                    </div>\n\n                    <div className=\"d-flex justify-content-between align-self-center\">\n                        <Typography variant=\"body2\" style={labelStyle}>\n                            Product\n                        </Typography>\n\n                        <Typography variant=\"body2\" style={valueStyle}>\n                            {packageRateDetails?.package_name || \"-\"}\n                        </Typography>\n                    </div>\n\n                    <div className=\"d-flex justify-content-between align-self-center\">\n                        <Typography variant=\"body2\" style={labelStyle}>\n                            Premium (RM)\n                        </Typography>\n\n                        <Typography variant=\"body2\" style={valueStyle}>\n                            {packageRateDetails?.package_rate?.premium || \"-\"}\n                        </Typography>\n                    </div>\n\n                    <div className=\"d-flex justify-content-between align-self-center\">\n                        <Typography variant=\"body2\" style={labelStyle}>\n                            Service Tax 6%\n                        </Typography>\n\n                        <Typography variant=\"body2\" style={valueStyle}>\n                            {packageRateDetails?.package_rate?.service_tax || \"-\"}\n                        </Typography>\n                    </div>\n\n                    <div className=\"d-flex justify-content-between align-self-center\">\n                        <Typography variant=\"body2\" style={labelStyle}>\n                            Stamp Duty\n                        </Typography>\n\n                        <Typography variant=\"body2\" style={valueStyle}>\n                            {packageRateDetails?.package_rate?.stamp_duty || \"-\"}\n                        </Typography>\n                    </div>\n\n                    {packageRateDetails?.package_rate?.total_travel_delay_upgrade_fee !== null &&\n                        packageRateDetails?.package_rate?.total_travel_delay_upgrade_fee !==\n                            \"0.00\" && (\n                            <div className=\"d-flex justify-content-between align-self-center\">\n                                <Typography variant=\"body2\" style={labelStyle}>\n                                    Travel Delay Upgrade\n                                </Typography>\n\n                                <Typography variant=\"body2\" style={valueStyle}>\n                                    {packageRateDetails?.package_rate\n                                        ?.total_travel_delay_upgrade_fee || \"-\"}\n                                </Typography>\n                            </div>\n                        )}\n\n                    <Divider className=\"mt-3 mb-4\"></Divider>\n\n                    <div\n                        className=\"d-flex justify-content-between align-self-center\"\n                        style={{ backgroundColor: \"rgb(237, 247, 237)\", padding: \"1%\" }}\n                    >\n                        <Typography variant=\"body2\" style={labelStyle}>\n                            Total Premium (RM)\n                        </Typography>\n\n                        <Typography variant=\"body2\" style={valueStyle}>\n                            {packageRateDetails?.package_rate?.total_premium || \"-\"}\n                        </Typography>\n                    </div>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    packageRateDetails: state.insurance.packageRateDetails,\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardInsuranceRateDetails)\n","import React from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport { BiTrash } from \"react-icons/bi\"\nimport Table from \"@mui/material/Table\"\nimport TableBody from \"@mui/material/TableBody\"\nimport TableCell from \"@mui/material/TableCell\"\nimport TableContainer from \"@mui/material/TableContainer\"\nimport TableHead from \"@mui/material/TableHead\"\nimport TableRow from \"@mui/material/TableRow\"\nimport IconButton from \"@mui/material/IconButton\"\nimport Box from \"@mui/material/Box\"\nimport { format } from \"date-fns\"\n\nfunction TableNominee({ remove, data }) {\n    return (\n        <Box sx={{ border: \"thin solid rgba(0, 0, 0, 0.12)\", borderRadius: \"4px\" }}>\n            <Grid item xs={12} className=\"pl-0\">\n                <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell style={{ width: \"19%\" }}>\n                                    <b>Name</b>\n                                </TableCell>\n                                <TableCell style={{ width: \"19%\" }}>\n                                    <b>Travel Document</b>\n                                </TableCell>\n                                <TableCell style={{ width: \"19%\" }}>\n                                    <b>DOB</b>\n                                </TableCell>\n                                <TableCell>\n                                    <b>Mobile No</b>\n                                </TableCell>\n                                <TableCell>\n                                    <b>Relationship</b>\n                                </TableCell>\n                                <TableCell>\n                                    <b>Share (%)</b>\n                                </TableCell>\n                                {remove && <TableCell style={{ width: \"5%\" }}></TableCell>}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {data?.map(\n                                (item, index) =>\n                                    item.nomineeName.length > 0 && (\n                                        <TableRow\n                                            key={index}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\": {\n                                                    border: 0,\n                                                },\n                                            }}\n                                        >\n                                            <TableCell style={{ width: \"19%\" }}>\n                                                {item.nomineeName}\n                                            </TableCell>\n                                            <TableCell\n                                                style={{ width: \"19%\" }}\n                                                className=\"text-uppercase\"\n                                            >\n                                                {item.nomineeTravelDocument}{\" \"}\n                                                {item.nomineeTravelDocumentValue}\n                                            </TableCell>\n                                            <TableCell style={{ width: \"19%\" }}>\n                                                {item.nomineeDOB &&\n                                                    format(new Date(item.nomineeDOB), \"d MMM yyyy\")}\n                                            </TableCell>\n                                            <TableCell>{item.nomineeCountryCode}{item.nomineeMobileNo}</TableCell>\n                                            <TableCell>{item.nomineeRelationship}</TableCell>\n                                            <TableCell>{item.nomineeShare}</TableCell>\n                                            {remove && (\n                                                <TableCell style={{ width: \"5%\" }}>\n                                                    <IconButton\n                                                        onClick={() => remove(index)}\n                                                        color=\"error\"\n                                                        size=\"small\"\n                                                    >\n                                                        <BiTrash />\n                                                    </IconButton>\n                                                </TableCell>\n                                            )}\n                                        </TableRow>\n                                    ),\n                            )}\n\n                            {data?.length === 0 && (\n                                <TableRow\n                                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                                >\n                                    <TableCell colSpan={6}>No record</TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default TableNominee\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport { CCard, CCardBody } from \"@coreui/react\"\nimport { format } from \"date-fns\"\nimport { useMediaQuery } from \"react-responsive\"\n\nimport { COVERAGE_TYPE } from \"src/utils/enum\"\nimport TableNominee from \"src/pages/insurance/components/common/tables/TableNominee\"\n\nexport const InsuredDetailsCard = ({ insuranceDetailsForm, item, index }) => {\n    const isDesktop = useMediaQuery({ minWidth: 992 })\n\n    return (\n        <CCard\n            key={index}\n            className=\"mb-3 mt-3\"\n            style={{\n                backgroundColor: \"rgb(237, 247, 237)\",\n                width: isDesktop ? \"100%\" : \"1200px\",\n            }}\n        >\n            <CCardBody>\n                <div className=\"d-flex justify-content-between\">\n                    <Typography\n                        variant=\"subtitle2\"\n                        color=\"primary\"\n                        className=\"text-decoration-underline\"\n                    >\n                        <b>\n                            {insuranceDetailsForm?.coverageType === COVERAGE_TYPE.INDIVIDUAL\n                                ? (\"Insured \" + (index + 1) + \" Details\")\n                                : index === 0 ? \"Insured\" : \"Spouse\"\n                            }    \n                        </b>\n                    </Typography>\n                </div>\n\n                <Grid\n                    container\n                    spacing={{ xs: 2, md: 3 }}\n                    columns={{ xs: 1, sm: 1, md: 12 }}\n                    direction=\"row\"\n                    className=\"mt-2\"\n                >\n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Insured Full Name\n                            </Typography>\n                            <div style={{ marginLeft: \"1%\" }}>\n                                {item?.insuredFullName}\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Travel Document\n                            </Typography>\n\n                            <div\n                                className=\"text-uppercase\"\n                                style={{ marginLeft: \"1%\" }}\n                            >\n                                {item?.insuredTravelDocument}{\" \"}\n                                {item?.insuredTravelDocumentValue}\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Insured DOB\n                            </Typography>\n\n                            <div style={{ marginLeft: \"1%\" }}>\n                                {item?.insuredDOB &&\n                                    format(\n                                        new Date(item?.insuredDOB),\n                                        \"d MMM yyyy\",\n                                    )}\n                            </div>\n                        </div>\n                    </Grid>\n\n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Insured Mobile Number\n                            </Typography>\n\n                            <div style={{ marginLeft: \"1%\" }}>\n                                {item?.insuredCountryCode + item?.insuredMobileNo}\n                            </div>\n                        </div>\n                    </Grid>\n                    \n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Insured Occupation\n                            </Typography>\n\n                            <div style={{ marginLeft: \"1%\" }}>\n                                {item?.insuredOccupation}\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Insured Address\n                            </Typography>\n\n                            <div style={{ marginLeft: \"1%\" }}>\n                                {item?.insuredAddress}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid item xs={1} sm={1} md={12} className=\"mt-3\">\n                    <Typography variant=\"subtitle2\" color=\"primary\">\n                        <b>Nominees</b>\n                    </Typography>\n\n                    <TableNominee data={item?.nominees} />\n                </Grid>\n            </CCardBody>\n        </CCard>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    insuranceDetailsForm: state.insurance.insuranceDetailsForm,\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InsuredDetailsCard)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport { CCard, CCardBody } from \"@coreui/react\"\nimport { format } from \"date-fns\"\nimport { useMediaQuery } from \"react-responsive\"\n\nimport TableNominee from \"src/pages/insurance/components/common/tables/TableNominee\"\n\nexport const ChildDetailsCard = ({ insuranceDetailsForm, item, index }) => {\n    const isDesktop = useMediaQuery({ minWidth: 992 })\n\n    return (\n        <CCard\n            key={index}\n            className=\"mb-3 mt-3\"\n            style={{\n                backgroundColor: \"rgb(237, 247, 237)\",\n                width: isDesktop ? \"100%\" : \"1200px\",\n            }}\n        >\n            <CCardBody>\n                <div className=\"d-flex justify-content-between\">\n                    <Typography\n                        variant=\"subtitle2\"\n                        color=\"primary\"\n                        className=\"text-decoration-underline\"\n                    >\n                        <b>\n                            {\"Child \" + (index + 1)}\n                        </b>\n                    </Typography>\n                </div>\n\n                <Grid\n                    container\n                    spacing={{ xs: 2, md: 3 }}\n                    columns={{ xs: 1, sm: 1, md: 12 }}\n                    direction=\"row\"\n                    className=\"mt-2\"\n                >\n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Insured Full Name\n                            </Typography>\n                            <div style={{ marginLeft: \"1%\" }}>\n                                {item?.insuredFullName}\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Travel Document\n                            </Typography>\n\n                            <div\n                                className=\"text-uppercase\"\n                                style={{ marginLeft: \"1%\" }}\n                            >\n                                {item?.insuredTravelDocument}{\" \"}\n                                {item?.insuredTravelDocumentValue}\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Insured DOB\n                            </Typography>\n\n                            <div style={{ marginLeft: \"1%\" }}>\n                                {item?.insuredDOB &&\n                                    format(\n                                        new Date(item?.insuredDOB),\n                                        \"d MMM yyyy\",\n                                    )}\n                            </div>\n                        </div>\n                    </Grid>\n                    \n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Insured Occupation\n                            </Typography>\n\n                            <div style={{ marginLeft: \"1%\" }}>\n                                {item?.insuredOccupation}\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} sm={1} md={6}>\n                        <div className=\"d-flex\">\n                            <Typography\n                                variant=\"subtitle2\"\n                                color=\"primary\"\n                            >\n                                Insured Address\n                            </Typography>\n\n                            <div style={{ marginLeft: \"1%\" }}>\n                                {item?.insuredAddress}\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid item xs={1} sm={1} md={12} className=\"mt-3\">\n                    <Typography variant=\"subtitle2\" color=\"primary\">\n                        <b>Nominees</b>\n                    </Typography>\n\n                    <TableNominee data={item?.nominees} />\n                </Grid>\n            </CCardBody>\n        </CCard>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    insuranceDetailsForm: state.insurance.insuranceDetailsForm,\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChildDetailsCard)\n","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { CCard, CCardBody } from \"@coreui/react\"\nimport Button from \"@mui/material/Button\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\"\nimport Collapse from \"@mui/material/Collapse\"\nimport CardActions from \"@mui/material/CardActions\"\nimport IconButton from \"@mui/material/IconButton\"\nimport { styled } from \"@mui/material/styles\"\n// import { format } from \"date-fns\"\n// import { useMediaQuery } from \"react-responsive\"\n\nimport PersonalInformationCard from \"src/pages/insurance/components/step3/cards/CardPersonalInformation\"\nimport CoverageDetailsCard from \"src/pages/insurance/components/step3/cards/CardCoverageDetails\"\n// import TableNominee from \"src/pages/insurance/components/common/tables/TableNominee\"\nimport CardInsuranceRateDetails from \"src/pages/insurance/components/common/cards/CardInsuranceRateDetails\"\nimport InsuredDetailsCard from \"src/pages/insurance/components/step3/cards/CardInsuredDetails\"\nimport ChildDetailsCard from \"src/pages/insurance/components/step3/cards/CardChildDetails\"\nimport { setInsuranceDetails } from \"src/action/ui_actions\"\nimport {\n    doStoreCustomerApplication,\n    doUpdateCustomerApplication,\n    doResetStoreCustomerApplication,\n} from \"src/action/api_actions\"\n\nconst ExpandMore = styled((props) => {\n    const { expand, ...other } = props\n    return <IconButton {...other} />\n})(({ theme, expand }) => ({\n    transform: !expand ? \"rotate(180deg)\" : \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n    }),\n}))\n\nexport const Step3 = ({\n    back,\n    next,\n    selectedInsurance,\n    insuranceDetailsForm,\n    packageRateDetails,\n    doStoreCustomerApplication,\n    doUpdateCustomerApplication,\n    doResetStoreCustomerApplication,\n    success,\n    storeCustomerApplicationResponse,\n    setInsuranceDetails,\n}) => {\n    const [expanded, setExpanded] = useState([])\n    // const isDesktop = useMediaQuery({ minWidth: 992 })\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n    const onSave = () => {\n        // Update\n        if (insuranceDetailsForm?.customerApplicationId) {\n            doUpdateCustomerApplication({\n                token: insuranceDetailsForm?.token,\n                customerApplicationId: insuranceDetailsForm?.customerApplicationId,\n                packageId: selectedInsurance?.id,\n                fullName: insuranceDetailsForm?.fullName,\n                travelDocument: insuranceDetailsForm?.travelDocument,\n                travelDocumentValue: insuranceDetailsForm?.travelDocumentValue,\n                dob: insuranceDetailsForm?.dob,\n                address: insuranceDetailsForm?.address,\n                occupation: insuranceDetailsForm?.occupation,\n                email: insuranceDetailsForm?.email,\n                countryCode: insuranceDetailsForm?.countryCode,\n                mobileNo: insuranceDetailsForm?.mobileNo,\n                coverageType: insuranceDetailsForm?.coverageType,\n                tripTypeId: insuranceDetailsForm?.tripType,\n                departureDate: insuranceDetailsForm?.departureDate,\n                returnDate: insuranceDetailsForm?.returnDate,\n                destinations: insuranceDetailsForm?.destination?.map((item) => item.code),\n                insureds: insuranceDetailsForm?.insureds,\n                child: insuranceDetailsForm?.child,\n                travelDelayUpgrade: insuranceDetailsForm?.travelDelayUpgrade,\n                deletedInsured: insuranceDetailsForm?.deletedInsured,\n                deletedNominee: insuranceDetailsForm?.deletedNominee,\n            })\n        }\n        // Insert\n        else {\n            doStoreCustomerApplication({\n                packageId: selectedInsurance?.id,\n                fullName: insuranceDetailsForm?.fullName,\n                travelDocument: insuranceDetailsForm?.travelDocument,\n                travelDocumentValue: insuranceDetailsForm?.travelDocumentValue,\n                dob: insuranceDetailsForm?.dob,\n                address: insuranceDetailsForm?.address,\n                occupation: insuranceDetailsForm?.occupation,\n                email: insuranceDetailsForm?.email,\n                countryCode: insuranceDetailsForm?.countryCode,\n                mobileNo: insuranceDetailsForm?.mobileNo,\n                coverageType: insuranceDetailsForm?.coverageType,\n                tripTypeId: insuranceDetailsForm?.tripType,\n                departureDate: insuranceDetailsForm?.departureDate,\n                returnDate: insuranceDetailsForm?.returnDate,\n                destinations: insuranceDetailsForm?.destination?.map((item) => item.code),\n                insureds: insuranceDetailsForm?.insureds,\n                child: insuranceDetailsForm?.child,\n                travelDelayUpgrade: insuranceDetailsForm?.travelDelayUpgrade,\n                referralId: insuranceDetailsForm?.referralId,\n            })\n        }\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n\n        const unloadCallback = (event) => {\n            event.preventDefault()\n            event.returnValue = \"\"\n            return \"\"\n        }\n\n        window.addEventListener(\"beforeunload\", unloadCallback)\n        return () => window.removeEventListener(\"beforeunload\", unloadCallback)\n    }, [])\n\n    useEffect(() => {\n        if (success) {\n            next()\n            doResetStoreCustomerApplication()\n\n            setInsuranceDetails({\n                insurerCode: selectedInsurance?.insurer_code,\n                fullName: insuranceDetailsForm?.fullName,\n                travelDocument: insuranceDetailsForm?.travelDocument,\n                travelDocumentValue: insuranceDetailsForm?.travelDocumentValue,\n                dob: insuranceDetailsForm?.dob,\n                address: insuranceDetailsForm?.address,\n                occupation: insuranceDetailsForm?.occupation,\n                email: insuranceDetailsForm?.email,\n                countryCode: insuranceDetailsForm?.countryCode,\n                mobileNo: insuranceDetailsForm?.mobileNo,\n                coverageType: insuranceDetailsForm?.coverageType,\n                departureDate: insuranceDetailsForm?.departureDate,\n                returnDate: insuranceDetailsForm?.returnDate,\n                destination: insuranceDetailsForm?.destination,\n                isWithinMalaysia: insuranceDetailsForm.isWithinMalaysia,\n                isSpouse: insuranceDetailsForm.isSpouse,\n                tripType: insuranceDetailsForm?.tripType,\n                customerApplicationId: storeCustomerApplicationResponse?.customer_application_id,\n                insureds: storeCustomerApplicationResponse?.insureds,\n                child: storeCustomerApplicationResponse?.child,\n                travelDelayUpgrade: insuranceDetailsForm?.travelDelayUpgrade,\n                token: storeCustomerApplicationResponse?.token,\n                deletedInsured: [],\n                deletedNominee: [],\n            })\n        }\n    }, [success])\n\n    return (\n        <div id=\"insurance-step-3-wrapper\" className=\"d-flex justify-content-center mt-5\">\n            <CCard className=\"w-100 border-0\">\n                <CCardBody>\n                    <div id=\"insurance-step-3-title\">\n                        <b>Review and make payment</b>\n                    </div>\n\n                    <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 3, md: 3 }}>\n                        <Grid item xs={12} sm={6} md={6}>\n                            <PersonalInformationCard back={back} />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} md={6}>\n                            <CoverageDetailsCard back={back} />\n                        </Grid>\n                    </Grid>\n\n                    {insuranceDetailsForm?.insureds?.length > 0 &&\n                        insuranceDetailsForm?.insureds?.map(\n                            (item, index) =>\n                                item?.insuredFullName?.length > 0 && (\n                                    <div key={index} style={{ overflowX: \"auto\" }}>\n                                        <InsuredDetailsCard \n                                            item={item}\n                                            index={index}\n                                        />\n                                    </div>\n                                ),\n                        )\n                    }\n\n                    {insuranceDetailsForm?.child?.length > 0 &&\n                        insuranceDetailsForm?.child?.map(\n                            (item, index) =>\n                                item?.insuredFullName?.length > 0 && (\n                                    <div key={index} style={{ overflowX: \"auto\" }}>\n                                        <ChildDetailsCard \n                                            item={item}\n                                            index={index}\n                                        />\n                                    </div>\n                                ),\n                        )\n                    }\n\n                    <Grid\n                        container\n                        spacing={{ xs: 2, md: 5 }}\n                        columns={{ xs: 1, sm: 2, md: 9 }}\n                        style={{ marginTop: \"40px\" }}\n                    >\n                        <Grid item xs={1} sm={1} md={5}>\n                            <CardActions\n                                disableSpacing\n                                style={{ border: \"1px solid rgba(0, 0, 0, 0.12)\" }}\n                            >\n                                <Typography variant=\"div\" className=\"summary-card-title\">\n                                    <b>Schedule of Benefits</b>\n                                </Typography>\n\n                                <ExpandMore\n                                    expand={expanded}\n                                    onClick={handleExpandClick}\n                                    aria-expanded={expanded}\n                                    aria-label=\"show more\"\n                                >\n                                    <ExpandMoreIcon />\n                                </ExpandMore>\n                            </CardActions>\n\n                            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: packageRateDetails?.package_rate?.insurance_benefit\n                                            ?.content,\n                                    }}\n                                />\n                            </Collapse>\n                        </Grid>\n\n                        <Grid item xs={1} sm={1} md={4}>\n                            <CardInsuranceRateDetails back={back} />\n\n                            <div className=\"d-flex justify-content-end mt-3\">\n                                <Button\n                                    disableElevation\n                                    className=\"m-2\"\n                                    size=\"small\"\n                                    variant=\"outlined\"\n                                    onClick={back}\n                                >\n                                    Back\n                                </Button>\n                                <Button\n                                    disableElevation\n                                    className=\"m-2\"\n                                    size=\"small\"\n                                    variant=\"contained\"\n                                    onClick={onSave}\n                                >\n                                    Pay Now\n                                </Button>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </CCardBody>\n            </CCard>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    selectedInsurance: state.insurance.selectedInsurance,\n    insuranceDetailsForm: state.insurance.insuranceDetailsForm,\n    packageRateDetails: state.insurance.packageRateDetails,\n    success: state.insurance.success,\n    fail: state.insurance.fail,\n    storeCustomerApplicationErrorMessage: state.insurance.storeCustomerApplicationErrorMessage,\n    storeCustomerApplicationResponse: state.insurance.storeCustomerApplicationResponse,\n})\n\nconst mapDispatchToProps = {\n    doStoreCustomerApplication,\n    doUpdateCustomerApplication,\n    doResetStoreCustomerApplication,\n    setInsuranceDetails,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Step3)\n","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@mui/material/Grid\"\nimport Button from \"@mui/material/Button\"\nimport Typography from \"@mui/material/Typography\"\nimport Checkbox from \"@mui/material/Checkbox\"\nimport { Link } from \"react-router-dom\"\nimport { useMediaQuery } from \"react-responsive\"\n\nimport CardInsuranceRateDetails from \"src/pages/insurance/components/common/cards/CardInsuranceRateDetails\"\nimport logoVisa from \"src/assets/logoVisa.png\"\nimport logoFPX from \"src/assets/logoFPX.png\"\n\nexport const SectionPayment = ({\n    back,\n    storeCustomerApplicationResponse,\n    insuranceDetailsForm,\n    selectedInsurance,\n    packageRateDetails,\n}) => {\n    const [vCode, setVCode] = useState(null)\n    const [orderId, setOrderId] = useState(null)\n    const [merchantId, seMerchantId] = useState(null)\n    const [totalPremium, setTotalPremium] = useState(null)\n    const [isChecked, setIsChecked] = useState(false)\n    const isSurfacePro7 = useMediaQuery({ width: 912 })\n\n    useEffect(() => {\n        if (storeCustomerApplicationResponse) {\n            setVCode(storeCustomerApplicationResponse?.v_code)\n            setOrderId(storeCustomerApplicationResponse?.order_id)\n            seMerchantId(storeCustomerApplicationResponse?.merchant_id)\n        }\n    }, [storeCustomerApplicationResponse])\n\n    useEffect(() => {\n        setTotalPremium(packageRateDetails?.package_rate?.total_premium)\n    }, [packageRateDetails])\n\n    return (\n        <>\n            <Grid\n                container\n                spacing={{ xs: 2, md: 5 }}\n                columns={{ xs: 1, sm: 1, md: isSurfacePro7 ? 1 : 12 }}\n            >\n                <Grid item xs={1} sm={1} md={6}>\n                    <CardInsuranceRateDetails />\n                </Grid>\n\n                <Grid item xs={1} sm={1} md={isSurfacePro7 ? 1 : 6}>\n                    <Typography variant=\"h6\">\n                        <b>Payment Method</b>\n                    </Typography>\n\n                    <Typography variant=\"subtitle2\">\n                        Secure Online Payment by MOLPay Please select a payment type from below to\n                        proceed for payment.\n                    </Typography>\n\n                    <div className=\"mt-5\">\n                        <Grid\n                            container\n                            spacing={{ xs: 2, md: 5 }}\n                            columns={{ xs: 1, sm: 12, md: 12 }}\n                        >\n                            <Grid item xs={1} sm={6} md={6}>\n                                <div className=\"m-3\">\n                                    <div className=\"text-center\">\n                                        <img src={logoVisa} style={{ width: \"50%\" }} />\n                                    </div>\n                                    <div className=\"mt-2\">\n                                        <Button\n                                            disableElevation\n                                            size=\"small\"\n                                            className=\"w-100\"\n                                            variant=\"contained\"\n                                            component=\"div\"\n                                            disabled={!isChecked}\n                                            data-toggle=\"molpayseamless\"\n                                            data-status={true}\n                                            data-mpsmerchantid={merchantId}\n                                            data-mpschannel=\"credit\"\n                                            data-mpsamount={totalPremium}\n                                            data-mpsorderid={orderId}\n                                            data-mpsbill_name={insuranceDetailsForm?.fullName}\n                                            data-mpsbill_email={insuranceDetailsForm?.email}\n                                            data-mpsbill_desc={selectedInsurance?.package_name}\n                                            data-mpsvcode={vCode}\n                                        >\n                                            Pay with Credit/Debit Card\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Grid>\n                            <Grid item xs={1} sm={6} md={6}>\n                                <div className=\"m-3\">\n                                    <div className=\"text-center\">\n                                        <img src={logoFPX} style={{ width: \"44%\" }} />\n                                    </div>\n                                    <div className=\"mt-2\">\n                                        <Button\n                                            disableElevation\n                                            size=\"small\"\n                                            className=\"w-100\"\n                                            variant=\"contained\"\n                                            component=\"div\"\n                                            disabled={!isChecked}\n                                            data-toggle=\"molpayseamless\"\n                                            data-status={true}\n                                            data-mpsmerchantid={merchantId}\n                                            data-mpschannel=\"fpx\"\n                                            data-mpsamount={totalPremium}\n                                            data-mpsorderid={orderId}\n                                            data-mpsbill_name={insuranceDetailsForm?.fullName}\n                                            data-mpsbill_email={insuranceDetailsForm?.email}\n                                            data-mpsbill_desc={selectedInsurance?.package_name}\n                                            data-mpsvcode={vCode}\n                                        >\n                                            Pay with FPX\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </div>\n\n                    <div className=\"mt-5 d-flex\">\n                        <div>\n                            <Checkbox\n                                size=\"small\"\n                                onChange={(e) => {\n                                    setIsChecked(e.target.checked)\n                                }}\n                            />\n                        </div>\n                        <div>\n                            <Typography variant=\"caption\" component=\"div\">\n                                I have read your{\" \"}\n                                <Link\n                                    to=\"/privacy-policy\"\n                                    target=\"_blank\"\n                                    style={{\n                                        color: \"#009c99\",\n                                        textDecoration: \"none\",\n                                        cursor: \"pointer\",\n                                    }}\n                                >\n                                    Privacy Policy\n                                </Link>{\" \"}\n                                and agree to provide my personal contact details to enable you to\n                                contact me for the purposes of this Quotation.\n                            </Typography>\n\n                            <Typography variant=\"caption\" component=\"div\" className=\"mt-4\">\n                                Click{\" \"}\n                                <Link\n                                    to=\"/privacy-policy\"\n                                    target=\"_blank\"\n                                    style={{\n                                        color: \"#009c99\",\n                                        textDecoration: \"none\",\n                                        cursor: \"pointer\",\n                                    }}\n                                >\n                                    Privacy Policy\n                                </Link>{\" \"}\n                                or{\" \"}\n                                <Link\n                                    to=\"/term-and-condition\"\n                                    target=\"_blank\"\n                                    style={{\n                                        color: \"#009c99\",\n                                        textDecoration: \"none\",\n                                        cursor: \"pointer\",\n                                    }}\n                                >\n                                    Terms and Conditions\n                                </Link>{\" \"}\n                                to read more.\n                            </Typography>\n                        </div>\n                    </div>\n                </Grid>\n            </Grid>\n            <div className=\"d-flex justify-content-end\">\n                <Button\n                    disableElevation\n                    className=\"m-2\"\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={back}\n                >\n                    Back\n                </Button>\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    storeCustomerApplicationResponse: state.insurance.storeCustomerApplicationResponse,\n    insuranceDetailsForm: state.insurance.insuranceDetailsForm,\n    selectedInsurance: state.insurance.selectedInsurance,\n    packageRateDetails: state.insurance.packageRateDetails,\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionPayment)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Typography from \"@mui/material/Typography\"\nimport Box from \"@mui/material/Box\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport { IoCloseCircle, IoCheckmarkCircle } from \"react-icons/io5\"\n\nexport const CardPaymentReturnStatus = ({ paymentReturnData }) => {\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <Card variant=\"outlined\" className=\"p-2\" style={{ border: \"none\" }}>\n                <CardContent className=\"p-0\">\n                    <div className=\"p-2\" style={{ backgroundColor: \"rgb(237, 247, 237)\" }}>\n                        <Typography variant=\"subtitle2\" style={{ fontSize: \"medium\" }}>\n                            {paymentReturnData?.package_name}\n                        </Typography>\n                    </div>\n\n                    <div\n                        className=\"mt-1 d-flex justify-content-between\"\n                        style={{ backgroundColor: \"rgb(237, 247, 237)\" }}\n                    >\n                        <div className=\"p-2 w-100\">\n                            <b>Payment Status</b>\n                        </div>\n                        <div\n                            className=\"p-2 w-100\"\n                            style={{\n                                color: paymentReturnData?.paymentSuccess ? \"#009C99\" : \"#D32f2f\",\n                            }}\n                        >\n                            {paymentReturnData?.paymentStatusMessage}\n                        </div>\n                    </div>\n\n                    <div\n                        className=\"mt-1 d-flex justify-content-between\"\n                        style={{ backgroundColor: \"rgb(237, 247, 237)\" }}\n                    >\n                        <div className=\"p-2 w-100\">\n                            <b>Payment Ref No.</b>\n                        </div>\n                        <div className=\"p-2 w-100\">{paymentReturnData?.referenceNumber}</div>\n                    </div>\n\n                    <div\n                        className=\"mt-1 d-flex justify-content-between\"\n                        style={{ backgroundColor: \"rgb(237, 247, 237)\" }}\n                    >\n                        {!paymentReturnData?.paymentSuccess && (\n                            <>\n                                <div className=\"p-2 w-100\">\n                                    <b>Error</b>\n                                </div>\n                                <div className=\"p-2 w-100\">{paymentReturnData?.errorMessage}</div>\n                            </>\n                        )}\n                    </div>\n\n                    <div className=\"p-2\" style={{ backgroundColor: \"rgb(237, 247, 237)\" }}>\n                        {!paymentReturnData?.paymentSuccess && (\n                            <IoCloseCircle\n                                color=\"#D32f2f\"\n                                size=\"1.4em\"\n                                style={{ marginRight: \"1%\" }}\n                            />\n                        )}\n\n                        {paymentReturnData?.paymentSuccess && (\n                            <IoCheckmarkCircle\n                                color=\"#009C99\"\n                                size=\"1.4em\"\n                                style={{ marginRight: \"1%\" }}\n                            />\n                        )}\n\n                        {paymentReturnData?.message}\n                    </div>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardPaymentReturnStatus)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Typography from \"@mui/material/Typography\"\nimport { format } from \"date-fns\"\n\nexport const PersonalInformationCard = ({ paymentReturnData }) => {\n    return (\n        <Card variant=\"outlined\" className=\"p-2\">\n            <CardContent>\n                <div className=\"d-flex justify-content-between align-self-center\">\n                    <Typography variant=\"h6\" component=\"div\" className=\"summary-card-title\">\n                        <b>Personal Information</b>\n                    </Typography>\n                </div>\n\n                <div className=\"mb-3 pb-2\"></div>\n\n                <Box sx={{ width: \"100%\" }}>\n                    <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                        <Grid item xs={12} className=\"pt-2 pl-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Full Name\n                                </Typography>\n                                <div>{paymentReturnData?.package_rate?.name || \"-\"}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Travel Document\n                                </Typography>\n                                <div className=\"text-uppercase\">\n                                    {paymentReturnData?.package_rate?.travel_document || \"-\"}{\" \"}\n                                    {paymentReturnData?.package_rate?.travel_document_value}\n                                </div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    DOB\n                                </Typography>\n                                <div className=\"text-uppercase\">\n                                    {paymentReturnData?.package_rate?.dob &&\n                                        format(\n                                            new Date(paymentReturnData?.package_rate?.dob),\n                                            \"d MMM yyyy\",\n                                        )}\n                                </div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Address\n                                </Typography>\n                                <div>{paymentReturnData?.package_rate?.address || \"-\"}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Occupation\n                                </Typography>\n                                <div>{paymentReturnData?.package_rate?.occupation || \"-\"}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Email\n                                </Typography>\n                                <div>{paymentReturnData?.package_rate?.email || \"-\"}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Mobile Number\n                                </Typography>\n                                <div>\n                                    {paymentReturnData?.package_rate?.mobile_no\n                                        ? `(${paymentReturnData?.package_rate?.country_code}) ${paymentReturnData?.package_rate?.mobile_no}`\n                                        : \"-\"}\n                                </div>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalInformationCard)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Typography from \"@mui/material/Typography\"\nimport { format } from \"date-fns\"\n\nimport { TRIP_TYPE } from \"src/utils/enum\"\n\nexport const CoverageDetailsCard = ({ paymentReturnData, meta }) => {\n    const showTravelPeriod = () => {\n        if (!paymentReturnData?.package_rate?.departure_date) {\n            return \"-\"\n        }\n\n        if (paymentReturnData?.package_rate?.tripType === TRIP_TYPE.ANNUAL.id) {\n            return (\n                <div>\n                    {format(new Date(paymentReturnData?.package_rate?.departure_date), \"d/MM/yyyy\")}\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    {format(new Date(paymentReturnData?.package_rate?.departure_date), \"d/MM/yyyy\")}{\" \"}\n                    - {\"\"}\n                    {format(new Date(paymentReturnData?.package_rate?.return_date), \"d/MM/yyyy\")}\n                </div>\n            )\n        }\n    }\n    return (\n        <Card variant=\"outlined\" className=\"p-2 h-100\">\n            <CardContent>\n                <div className=\"d-flex justify-content-between align-self-center\">\n                    <Typography variant=\"h6\" component=\"div\" className=\"summary-card-title\">\n                        <b>Trip Details</b>\n                    </Typography>\n                </div>\n\n                <div className=\"mb-3 pb-2\"></div>\n\n                <Box sx={{ width: \"100%\" }}>\n                    <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Destination\n                                </Typography>\n                                <div>{paymentReturnData?.package_rate?.destinations_name}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Travel Period\n                                </Typography>\n                                <div>{showTravelPeriod()}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Trip Type\n                                </Typography>\n                                <div>{paymentReturnData?.package_rate?.trip_type_name}</div>\n                            </div>\n                        </Grid>\n\n                        <Grid item xs={12} className=\"pt-2 pl-2\">\n                            <div>\n                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                    Coverage Type\n                                </Typography>\n                                <div className=\"text-capitalize\">\n                                    {paymentReturnData?.package_rate?.coverage_type || \"-\"}\n                                </div>\n                            </div>\n                        </Grid>\n\n                        {paymentReturnData?.package_rate?.travelDelayUpgrade !== undefined && (\n                            <Grid item xs={12} className=\"pt-2 pl-2\">\n                                <div>\n                                    <Typography variant=\"subtitle2\" color=\"primary\">\n                                        Travel Delay Upgrade\n                                    </Typography>\n                                    <div className=\"text-capitalize\">\n                                        {paymentReturnData?.package_rate?.travel_delay_upgrade == 1\n                                            ? \"Yes\"\n                                            : \"No\"}\n                                    </div>\n                                </div>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Box>\n            </CardContent>\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    meta: state.core.meta,\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CoverageDetailsCard)\n","import React from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Table from \"@mui/material/Table\"\nimport TableBody from \"@mui/material/TableBody\"\nimport TableCell from \"@mui/material/TableCell\"\nimport TableContainer from \"@mui/material/TableContainer\"\nimport TableHead from \"@mui/material/TableHead\"\nimport TableRow from \"@mui/material/TableRow\"\nimport Box from \"@mui/material/Box\"\nimport { format } from \"date-fns\"\n\nfunction TableNominee({ data }) {\n    return (\n        <Box sx={{ border: \"thin solid rgba(0, 0, 0, 0.12)\", borderRadius: \"4px\" }}>\n            <Grid item xs={12} className=\"pl-0\">\n                <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell style={{ width: \"19%\" }}>\n                                    <b>Name</b>\n                                </TableCell>\n                                <TableCell style={{ width: \"19%\" }}>\n                                    <b>Travel Document</b>\n                                </TableCell>\n                                <TableCell style={{ width: \"19%\" }}>\n                                    <b>DOB</b>\n                                </TableCell>\n                                <TableCell>\n                                    <b>Relationship</b>\n                                </TableCell>\n                                <TableCell>\n                                    <b>Mobile Number</b>\n                                </TableCell>\n                                <TableCell>\n                                    <b>Share (%)</b>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {data?.map(\n                                (item, index) =>\n                                    item.name.length > 0 && (\n                                        <TableRow\n                                            key={index}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\": {\n                                                    border: 0,\n                                                },\n                                            }}\n                                        >\n                                            <TableCell style={{ width: \"19%\" }}>\n                                                {item.name}\n                                            </TableCell>\n                                            <TableCell\n                                                style={{ width: \"19%\" }}\n                                                className=\"text-uppercase\"\n                                            >\n                                                {item.travel_document} {item.travel_document_value}\n                                            </TableCell>\n                                            <TableCell style={{ width: \"19%\" }}>\n                                                {item.dob &&\n                                                    format(new Date(item.dob), \"d MMM yyyy\")}\n                                            </TableCell>\n                                            <TableCell>{item.relationship}</TableCell>\n                                            <TableCell>\n                                                {item.mobile_no\n                                                    ? `(${item.country_code}) ${item.mobile_no}`\n                                                    : \"-\"}\n                                            </TableCell>\n                                            <TableCell>{item.share}</TableCell>\n                                        </TableRow>\n                                    ),\n                            )}\n\n                            {data?.length === 0 && (\n                                <TableRow\n                                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                                >\n                                    <TableCell colSpan={6}>No record</TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </Box>\n    )\n}\n\nexport default TableNominee\n","import React from \"react\"\nimport { CCard, CCardBody } from \"@coreui/react\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport { useMediaQuery } from \"react-responsive\"\nimport { format } from \"date-fns\"\n\nimport TableNominee from \"src/pages/insurance/components/step4/tables/TableNominee\"\n\nexport default function CardInsuredsDetails({ paymentReturnData }) {\n    const isDesktop = useMediaQuery({ minWidth: 992 })\n\n    return (\n        <>\n            {paymentReturnData?.package_rate?.insured_list?.length > 0 &&\n                paymentReturnData?.package_rate?.insured_list?.map(\n                    (item, index) =>\n                        item?.name?.length > 0 && (\n                            <div key={index} style={{ overflowX: \"auto\" }}>\n                                <CCard\n                                    key={index}\n                                    className=\"mb-3 mt-3\"\n                                    style={{\n                                        backgroundColor: \"rgb(237, 247, 237)\",\n                                        width: isDesktop ? \"100%\" : \"1200px\",\n                                    }}\n                                >\n                                    <CCardBody>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <Typography\n                                                variant=\"subtitle2\"\n                                                color=\"primary\"\n                                                className=\"text-decoration-underline\"\n                                            >\n                                                <b>Insured {index + 1} Details</b>\n                                            </Typography>\n                                        </div>\n\n                                        <Grid\n                                            container\n                                            spacing={{ xs: 2, md: 3 }}\n                                            columns={{ xs: 1, sm: 1, md: 12 }}\n                                            direction=\"row\"\n                                            className=\"mt-2\"\n                                        >\n                                            <Grid item xs={1} sm={1} md={6}>\n                                                <div className=\"d-flex\">\n                                                    <Typography variant=\"subtitle2\" color=\"primary\">\n                                                        Insured Full Name\n                                                    </Typography>\n                                                    <div style={{ marginLeft: \"1%\" }}>\n                                                        {item?.name}\n                                                    </div>\n                                                </div>\n                                            </Grid>\n\n                                            <Grid item xs={1} sm={1} md={6}>\n                                                <div className=\"d-flex\">\n                                                    <Typography variant=\"subtitle2\" color=\"primary\">\n                                                        Travel Document\n                                                    </Typography>\n\n                                                    <div\n                                                        className=\"text-uppercase\"\n                                                        style={{ marginLeft: \"1%\" }}\n                                                    >\n                                                        {item?.travel_document}{\" \"}\n                                                        {item?.travel_document_value}\n                                                    </div>\n                                                </div>\n                                            </Grid>\n\n                                            <Grid item xs={1} sm={1} md={6}>\n                                                <div className=\"d-flex\">\n                                                    <Typography variant=\"subtitle2\" color=\"primary\">\n                                                        Insured DOB\n                                                    </Typography>\n\n                                                    <div style={{ marginLeft: \"1%\" }}>\n                                                        {item?.dob &&\n                                                            format(\n                                                                new Date(item?.dob),\n                                                                \"d MMM yyyy\",\n                                                            )}\n                                                    </div>\n                                                </div>\n                                            </Grid>\n\n                                            <Grid item xs={1} sm={1} md={6}>\n                                                <div className=\"d-flex\">\n                                                    <Typography variant=\"subtitle2\" color=\"primary\">\n                                                        Insured Occupation\n                                                    </Typography>\n\n                                                    <div style={{ marginLeft: \"1%\" }}>\n                                                        {item?.occupation}\n                                                    </div>\n                                                </div>\n                                            </Grid>\n\n                                            <Grid item xs={1} sm={1} md={6}>\n                                                <div className=\"d-flex\">\n                                                    <Typography variant=\"subtitle2\" color=\"primary\">\n                                                        Insured Address\n                                                    </Typography>\n\n                                                    <div style={{ marginLeft: \"1%\" }}>\n                                                        {item?.address}\n                                                    </div>\n                                                </div>\n                                            </Grid>\n\n                                            <Grid item xs={1} sm={1} md={6}>\n                                                <div className=\"d-flex\">\n                                                    <Typography variant=\"subtitle2\" color=\"primary\">\n                                                        Insured Mobile Number\n                                                    </Typography>\n\n                                                    <div style={{ marginLeft: \"1%\" }}>\n                                                        {item?.mobile_no\n                                                            ? `(${item?.country_code}) ${item?.mobile_no}`\n                                                            : \"-\"}\n                                                    </div>\n                                                </div>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item xs={1} sm={1} md={12} className=\"mt-3\">\n                                            <Typography variant=\"subtitle2\" color=\"primary\">\n                                                <b>Nominees</b>\n                                            </Typography>\n\n                                            <TableNominee data={item?.nominee_list} />\n                                        </Grid>\n                                    </CCardBody>\n                                </CCard>\n                            </div>\n                        ),\n                )}\n        </>\n    )\n}\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@mui/material/Grid\"\nimport { Link } from \"react-router-dom\"\nimport { useMediaQuery } from \"react-responsive\"\nimport Divider from \"@mui/material/Divider\"\nimport Chip from \"@mui/material/Chip\"\n\nimport CardInsuranceRateDetails from \"src/pages/insurance/components/common/cards/CardInsuranceRateDetails\"\nimport CardPaymentReturnStatus from \"src/pages/insurance/components/step4/cards/CardPaymentReturnStatus\"\nimport CardPersonalInformation from \"src/pages/insurance/components/step4/cards/CardPersonalInformation\"\nimport CardCoverageDetails from \"src/pages/insurance/components/step4/cards/CardCoverageDetails\"\nimport CardInsuredsDetails from \"src/pages/insurance/components/step4/cards/CardInsuredsDetails\"\n\nexport const SectionPaymentReturn = ({ paymentReturnData }) => {\n    const isSurfacePro7 = useMediaQuery({ width: 912 })\n\n    return (\n        <Grid\n            container\n            spacing={{ xs: 2, md: 5 }}\n            columns={{ xs: 1, sm: 1, md: isSurfacePro7 ? 1 : 12 }}\n        >\n            <Grid item xs={1} sm={1} md={6}>\n                <CardInsuranceRateDetails />\n            </Grid>\n\n            <Grid item xs={1} sm={1} md={isSurfacePro7 ? 1 : 6}>\n                <CardPaymentReturnStatus paymentReturnData={paymentReturnData} />\n\n                <div className=\"mt-2 d-flex justify-content-end\">\n                    <Link\n                        to=\"/\"\n                        style={{\n                            color: \"#009c99\",\n                            cursor: \"pointer\",\n                        }}\n                    >\n                        Back to Home Page\n                    </Link>\n                </div>\n            </Grid>\n\n            <Grid item xs={1} sm={1} md={12}>\n                <Divider className=\"mt-5 mb-3\">\n                    <Chip color=\"primary\" label=\"Policy Details\" sx={{ borderRadius: \"4px\" }} />\n                </Divider>\n            </Grid>\n\n            <Grid item xs={1} sm={1} md={6}>\n                <CardPersonalInformation paymentReturnData={paymentReturnData} />\n            </Grid>\n\n            <Grid item xs={1} sm={1} md={6}>\n                <CardCoverageDetails paymentReturnData={paymentReturnData} />\n            </Grid>\n\n            <Grid item xs={1} sm={1} md={12}>\n                <CardInsuredsDetails paymentReturnData={paymentReturnData} />\n            </Grid>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionPaymentReturn)\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { useMediaQuery } from \"react-responsive\"\n\nimport SectionPayment from \"src/pages/insurance/components/step4/sections/SectionPayment\"\nimport SectionPaymentReturn from \"src/pages/insurance/components/step4/sections/SectionPaymentReturn\"\n\nexport const Step4 = ({ back, paymentReturnData }) => {\n    const isDesktop = useMediaQuery({ minWidth: 992 })\n    const isSurfacePro7 = useMediaQuery({ width: 912 })\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [])\n\n    const showContent = () => {\n        if (paymentReturnData) {\n            return <SectionPaymentReturn paymentReturnData={paymentReturnData} />\n        } else {\n            return <SectionPayment back={back} />\n        }\n    }\n    return (\n        <div className={isDesktop || isSurfacePro7 ? \"mt-5\" : \"\"}>\n            <div style={{ paddingTop: \"25px\" }}>{showContent()}</div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    storeCustomerApplicationResponse: state.insurance.storeCustomerApplicationResponse,\n    insuranceDetailsForm: state.insurance.insuranceDetailsForm,\n    selectedInsurance: state.insurance.selectedInsurance,\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Step4)\n","import React from \"react\"\nimport Box from \"@mui/material/Box\"\nimport Stepper from \"@mui/material/Stepper\"\nimport Step from \"@mui/material/Step\"\nimport StepLabel from \"@mui/material/StepLabel\"\nimport { CContainer } from \"@coreui/react\"\n\nfunction StepperHorizontal({ id, showStepContent, activeStep, steps }) {\n    return (\n        <Box id={id} sx={{ width: \"100%\" }} className=\"mt-5 mb-5\">\n            <CContainer className=\"container-wrapper\">\n                <Stepper activeStep={activeStep} style={{ marginTop: \"5rem\" }}>\n                    {steps.map((label, index) => {\n                        const stepProps = {}\n                        const labelProps = {}\n\n                        return (\n                            <Step key={label} {...stepProps}>\n                                <StepLabel {...labelProps}>{label}</StepLabel>\n                            </Step>\n                        )\n                    })}\n                </Stepper>\n            </CContainer>\n\n            {activeStep === steps.length ? (\n                <CContainer sx={{ mt: 2, mb: 1 }}>\n                    All steps completed - you&apos;re finished\n                </CContainer>\n            ) : (\n                <CContainer style={{}}>{showStepContent()}</CContainer>\n            )}\n        </Box>\n    )\n}\n\nexport default StepperHorizontal\n","import React from \"react\"\nimport Box from \"@mui/material/Box\"\nimport Stepper from \"@mui/material/Stepper\"\nimport Step from \"@mui/material/Step\"\nimport StepLabel from \"@mui/material/StepLabel\"\nimport StepContent from \"@mui/material/StepContent\"\n\nfunction StepperVertical({ id, showStepContent, steps, activeStep }) {\n    return (\n        <Box id={id} sx={{ maxWidth: 400 }}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                        <StepContent>{showStepContent()}</StepContent>\n                    </Step>\n                ))}\n            </Stepper>\n            {activeStep === steps.length && (\n                <StepContent>All steps completed - you&apos;re finished</StepContent>\n            )}\n        </Box>\n    )\n}\n\nexport default StepperVertical\n","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { CContainer } from \"@coreui/react\"\nimport jwt_decode from \"jwt-decode\"\nimport { useSearchParams, useLocation } from \"react-router-dom\"\n\nimport {\n    doGetInsurance,\n    doGetMeta,\n    doGetSalesUserDetail,\n    doResetStoreCustomerApplication,\n} from \"src/action/api_actions\"\nimport { setInsuranceRateDetails } from \"src/action/ui_actions\"\nimport Header from \"src/components/header\"\nimport Footer from \"src/components/footer/copyright\"\nimport Step1 from \"./Step1\"\nimport Step2 from \"./Step2\"\nimport Step3 from \"./Step3\"\nimport Step4 from \"./Step4\"\nimport StepperHorizontal from \"src/pages/insurance/components/common/steppers/StepperHorizontal\"\nimport StepperVertical from \"src/pages/insurance/components/common/steppers/StepperVertical\"\nimport {\n    DesktopView,\n    TabletView,\n    MobilePortraitView,\n} from \"src/utils/functions\"\n\nconst steps = [\"Package Selection\", \"Information\", \"Summary\", \"Payment\"]\n\nexport const Insurance = ({\n    doGetInsurance,\n    doGetMeta,\n    doGetSalesUserDetail,\n    doResetStoreCustomerApplication,\n    setInsuranceRateDetails,\n}) => {\n    const location = useLocation()\n    const [activeStep, setActiveStep] = useState(0)\n    const [searchParams, setSearchParams] = useSearchParams()\n    const [paymentReturnData, setPaymentReturnData] = useState(null)\n\n    useEffect(() => {\n        doGetInsurance()\n        doGetMeta()\n        const token = searchParams.get(\"id\")\n\n        if (token) {\n            doGetSalesUserDetail(token)\n        }\n\n        doResetStoreCustomerApplication()\n    }, [])\n\n    useEffect(() => {\n        if(location?.state?.fromProducts) {\n            setActiveStep(1)\n        }\n    }, [location])\n\n    useEffect(() => {\n        const xToken = searchParams.get(\"gMh3eC2jQRHDSVLS4KEfHfOLmEz3MZCvXIkUUu4p\")\n\n        if (xToken) {\n            const decodedToken = jwt_decode(xToken)\n\n            if (decodedToken) {\n                setActiveStep(3)\n                setPaymentReturnData(decodedToken)\n                setInsuranceRateDetails(decodedToken)\n            }\n        }\n    }, [searchParams])\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    }\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1)\n    }\n\n    const showStepContent = () => {\n        switch (activeStep) {\n            case 0:\n                return stepContent1()\n            case 1:\n                return stepContent2()\n            case 2:\n                return stepContent3()\n            case 3:\n                return stepContent4()\n            default:\n                return <CContainer className=\"mt-5\">-</CContainer>\n        }\n    }\n\n    const stepContent4 = () => {\n        return <Step4 back={handleBack} next={handleNext} paymentReturnData={paymentReturnData} />\n    }\n\n    const stepContent3 = () => {\n        return <Step3 back={handleBack} next={handleNext} />\n    }\n\n    const stepContent2 = () => {\n        return <Step2 back={handleBack} next={handleNext} />\n    }\n\n    const stepContent1 = () => {\n        return <Step1 next={handleNext} insurances={[]} />\n    }\n\n    return (\n        <div className=\"page-body\">\n            <Header />\n\n            <DesktopView>\n                <StepperHorizontal\n                    id=\"desktop-insurance-horizontal-stepper\"\n                    activeStep={activeStep}\n                    steps={steps}\n                    showStepContent={showStepContent}\n                />\n            </DesktopView>\n\n            <TabletView>\n                <StepperHorizontal\n                    id=\"desktop-insurance-horizontal-stepper\"\n                    activeStep={activeStep}\n                    steps={steps}\n                    showStepContent={showStepContent}\n                />\n            </TabletView>\n\n            <MobilePortraitView>\n                <StepperVertical\n                    id=\"mobile-insurance-vertical-stepper\"\n                    activeStep={activeStep}\n                    steps={steps}\n                    showStepContent={showStepContent}\n                />\n            </MobilePortraitView>\n\n            {/* <Footer /> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {\n    doGetInsurance,\n    doGetMeta,\n    doGetSalesUserDetail,\n    doResetStoreCustomerApplication,\n    setInsuranceRateDetails,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Insurance)\n"],"names":["InputTableTextControl","styled","control","name","label","defaultValue","number","onBlur","leadingZeros","props","render","field","onChange","value","fieldState","invalid","error","required","fullWidth","size","helperText","message","InputLabelProps","style","color","InputProps","inputComponent","NumberFormatterLeadingZeros","NumberFormatter","FormHelperTextProps","className","multiline","theme","transition","legend","float","overflow","display","width","padding","height","fontSize","visibility","whiteSpace","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","BootstrapInput","InputBase","marginTop","spacing","borderRadius","position","backgroundColor","palette","background","paper","border","transitions","create","borderColor","boxShadow","InputSelect","options","handleChange","useState","selectedOptions","setSelectedOptions","FormControl","sx","m","Select","multiple","displayEmpty","event","target","split","input","renderValue","selected","length","filter","i","includes","map","join","option","index","MenuItem","Checkbox","checked","indexOf","ListItemText","primaryTypographyProps","primary","mapDispatchToProps","setSelectedInsurance","setInsuranceDetails","connect","state","insurances","insurance","sales","meta","core","insuranceDetailsForm","selectedInsurance","loggedInUser","next","insuranceInsurance","setInsuranceInsurance","setInsurance","filterByInsurance","setFilterByInsurance","filterByRegion","setFilterByRegion","useEffect","window","scrollTo","prepareInsurance","insurer_list","insurer_name","id","tempInsurance","insurer_id","domestic","oversea","start_from_price_domestic","start_from_price_oversea","tempInsurances","insuranceLogo","insuranceTitleColor","produce","draftState","package_name","toLowerCase","logoAIG","logoAllianz","logoCHUBB","logoRHB","logoTune","logoAXA","backgroundStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundBlendMode","push","Alert","severity","Box","textAlign","Typography","variant","to","Grid","container","xs","md","columns","sm","item","filterInsurance","region","filterRegion","lg","margin","Card","find","CardContent","minHeight","insurer_code","INSURANCE","src","alt","gutterBottom","component","marginBottom","fontWeight","unsafeHTML","package_description","maxLine","ellipsis","basedOn","paddingRight","CardActions","Button","disableElevation","onClick","insureds","insurerCode","destination","isWithinMalaysia","code","fullName","travelDocument","travelDocumentValue","dob","address","occupation","email","countryCode","mobileNo","coverageType","departureDate","returnDate","travelDelayUpgrade","isSpouse","tripType","child","token","referralId","selectButton","Divider","attachment_url","location","href","disabled","Autocomplete","disablePortal","e","data","isOptionEqualToValue","top","paddingLeft","renderInput","params","TextField","FormHelperText","TextFieldStyle","LocalizationProvider","dateAdapter","AdapterDateFns","MobileDatePicker","disableCloseOnSelect","inputFormat","InputLabel","setWatchInsuranceCoverage","setIsSpouse","setValue","resetField","watchTripType","watchCoverageType","watchDepartureDate","watchIsWithinMalaysia","watchIsSpouse","watchDestination","setDepartureDate","optionsCountries","setOptionsCountries","optionsTripTypes","setOptionsTripType","disabledDestination","setDisabledDestination","hideReturnDate","setHideReturnDate","optionsCoverageType","optionsTravelDelayUpgrade","isShowChubbMessage","setIsShowChubbMessage","TRIP_TYPE","add","Date","years","sub","days","destination_list","country_name","is_domestic","trip_type_list","trip_type_code","trip_type_name","existDomestic","existOversea","InputTableDateControl","disablePast","defaultCalendarMonth","minDate","COVERAGE_TYPE","convertNricToDob","nric","checkValidNricRegex","match","year","exec","month","day","now","getFullYear","toString","decade","substring","parseInt","concat","getValues","watchTravelDocument","watchTravelDocumentValue","travelDocumentLabel","setTravelDocumentLabel","isNumber","setIsNumber","TRAVEL_DOCUMENT_TYPE","returnDOB","COUNTRY_CODE","yup","shape","nullable","max","when","is","then","test","nomineeTravelDocument","typeError","moment","diff","min","of","insuredFullName","insuredTravelDocument","insuredTravelDocumentValue","insuredDOB","insuredAddress","insuredOccupation","insuredMobileNo","nomineesTotalShare","nominees","nomineeName","nomineeDOB","nomineeTravelDocumentValue","nomineeRelationship","nomineeMobileNo","nomineeShare","EnumInsured","validateDuplicateNRIC","list","excludeIndex","findIndex","validateAge","packageName","tripTypeId","type","selectedPackageName","InsuranceRules","tripTypeName","rule","nricToDOB","dobToAge","age","diffDays","isValidAge","errorMessage","validateAgeErrorMessage","fromErrorMessage","todaysDate","indexInsured","indexNominee","setError","watch","watchNomineeTravelDocument","watchNomineeTravelDocumentValue","nomineeTravelDocumentLabel","setNomineeTravelDocumentLabel","direction","totalShare","reduce","previous","current","array","currentShare","parseFloat","light","FormInsured","removeInsured","validateDetails","setDeletedNomineeArray","watchInsuranceCoverage","watchNomineesTotalShare","useFieldArray","fields","append","remove","update","watchInsuredTravelDocument","watchInsuredTravelDocumentValue","insuredTravelDocumentLabel","setInsuredTravelDocumentLabel","isDesktop","useMediaQuery","minWidth","nomineeCountryCode","marginRight","IconButton","paddingTop","nomineeId","oldArray","idx","disableRipple","FormChild","removeChild","addInsured","addChild","countryList","doGetInsuranceRate","doResetGetInsuranceRateState","insuranceRateSuccess","insuranceRateFail","insuranceRateErrorMessage","back","useForm","defaultValues","c","d","resolver","yupResolver","FormSchema","mode","trigger","childFields","childAppend","childRemove","setErrorMessage","deletedNomineeArray","deletedInsuredArray","setDeletedInsuredArray","isloading","setIsLoading","isFromCoverageType","setIsFromCoverageType","isFromOtherPage","setIsFromOtherPage","isFromOtherPageIsSpouse","setIsFromOtherPageIsSpouse","customerApplicationId","setCustomerApplicationId","unloadCallback","preventDefault","returnValue","addEventListener","removeEventListener","childNominees","deletedNominee","deletedInsured","spouseInsured","isEmptyFullName","isEmptyEmail","isEmptyAddress","isEmptyMobileNo","customer","phone_number","insuredCountryCode","insured_id","nomineeIdArray","validateNomineeNRIC","duplicateNRICList","k","nominee","duplicateNRIC","flat","validateInsuredNRIC","insured","validateNomineeTotalShare","validInsured","validateInsuredCoverageType","combinedInsured","validateInsuredAge","validateChildAge","children","proceed","validInsuredForm","validInsuredNRIC","validNomineeNRIC","validNomineeTotalShare","validInsuredCoverageType","validInsuredAge","validChildAge","packageId","destinations","overflowX","LoadingButton","loading","rowSpacing","columnSpacing","format","showDestination","showTripType","undefined","packageRateDetails","labelStyle","valueStyle","package_rate","premium","service_tax","stamp_duty","total_travel_delay_upgrade_fee","total_premium","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","colSpan","marginLeft","ExpandMore","expand","other","transform","duration","shortest","doStoreCustomerApplication","doUpdateCustomerApplication","doResetStoreCustomerApplication","success","fail","storeCustomerApplicationErrorMessage","storeCustomerApplicationResponse","expanded","setExpanded","customer_application_id","disableSpacing","Collapse","in","timeout","unmountOnExit","dangerouslySetInnerHTML","__html","insurance_benefit","content","vCode","setVCode","orderId","setOrderId","merchantId","seMerchantId","totalPremium","setTotalPremium","isChecked","setIsChecked","isSurfacePro7","v_code","order_id","merchant_id","textDecoration","cursor","paymentReturnData","paymentSuccess","paymentStatusMessage","referenceNumber","travel_document","travel_document_value","mobile_no","country_code","destinations_name","departure_date","return_date","showTravelPeriod","coverage_type","travel_delay_upgrade","relationship","share","CardInsuredsDetails","insured_list","nominee_list","Chip","showStepContent","activeStep","steps","Stepper","Step","StepLabel","mt","mb","maxWidth","orientation","StepContent","Insurance","doGetInsurance","doGetMeta","doGetSalesUserDetail","setInsuranceRateDetails","useLocation","setActiveStep","useSearchParams","searchParams","setPaymentReturnData","get","fromProducts","xToken","decodedToken","jwt_decode","handleNext","prevActiveStep","handleBack","stepContent1","stepContent2","stepContent3","stepContent4"],"sourceRoot":""}